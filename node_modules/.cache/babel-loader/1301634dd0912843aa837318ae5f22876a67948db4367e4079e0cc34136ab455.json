{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.recover = exports.hashMessage = void 0;\nvar js_sha3_1 = require(\"js-sha3\");\nvar index_1 = require(\"./index\");\nvar elliptic_1 = require(\"elliptic\");\nvar secp256k1 = new elliptic_1.ec('secp256k1');\nvar bytesLength = function (a) {\n  return (a.length - 2) / 2;\n};\nvar bytesSlice = function (i, j, bs) {\n  return '0x' + bs.slice(i * 2 + 2, j * 2 + 2);\n};\nvar bytesToNumber = function (hex) {\n  return parseInt(hex.slice(2), 16);\n};\nvar decodeSignature = function (hex) {\n  return [bytesSlice(64, bytesLength(hex), hex), bytesSlice(0, 32, hex), bytesSlice(32, 64, hex)];\n};\nvar toChecksum = function (address) {\n  var addressHash = (0, js_sha3_1.keccak256)(address.slice(2));\n  var checksumAddress = '0x';\n  for (var i = 0; i < 40; i++) {\n    checksumAddress += parseInt(addressHash[i + 2], 16) > 7 ? address[i + 2].toUpperCase() : address[i + 2];\n  }\n  return checksumAddress;\n};\nvar hashMessage = function (message) {\n  var messageBytes = (0, index_1.hexToBytes)(Buffer.from(message, 'utf8').toString('hex'));\n  var messageBuffer = Buffer.from(messageBytes);\n  var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n  var preambleBuffer = Buffer.from(preamble);\n  var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n  return '0x' + (0, js_sha3_1.keccak256)(ethMessage.toString());\n};\nexports.hashMessage = hashMessage;\nvar recover = function (message, signature) {\n  var hash = (0, exports.hashMessage)(message);\n  var vals = decodeSignature(signature);\n  var vrs = {\n    v: bytesToNumber(vals[0]),\n    r: vals[1].slice(2),\n    s: vals[2].slice(2)\n  };\n  var ecPublicKey = secp256k1.recoverPubKey(Buffer.from(hash.slice(2), 'hex'), vrs, vrs.v < 2 ? vrs.v : 1 - vrs.v % 2);\n  var publicKey = '0x' + ecPublicKey.encode('hex', false).slice(2);\n  var publicHash = '0x' + (0, js_sha3_1.keccak256)((0, index_1.hexToBytes)(publicKey));\n  return toChecksum('0x' + publicHash.slice(-40));\n};\nexports.recover = recover;","map":{"version":3,"names":["Object","defineProperty","exports","value","recover","hashMessage","js_sha3_1","require","index_1","elliptic_1","secp256k1","ec","bytesLength","a","length","bytesSlice","i","j","bs","slice","bytesToNumber","hex","parseInt","decodeSignature","toChecksum","address","addressHash","keccak256","checksumAddress","toUpperCase","message","messageBytes","hexToBytes","Buffer","from","toString","messageBuffer","preamble","preambleBuffer","ethMessage","concat","signature","hash","vals","vrs","v","r","s","ecPublicKey","recoverPubKey","publicKey","encode","publicHash"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/@unstoppabledomains/resolution/build/utils/recoverSignature.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recover = exports.hashMessage = void 0;\nvar js_sha3_1 = require(\"js-sha3\");\nvar index_1 = require(\"./index\");\nvar elliptic_1 = require(\"elliptic\");\nvar secp256k1 = new elliptic_1.ec('secp256k1');\nvar bytesLength = function (a) { return (a.length - 2) / 2; };\nvar bytesSlice = function (i, j, bs) {\n    return '0x' + bs.slice(i * 2 + 2, j * 2 + 2);\n};\nvar bytesToNumber = function (hex) { return parseInt(hex.slice(2), 16); };\nvar decodeSignature = function (hex) { return [\n    bytesSlice(64, bytesLength(hex), hex),\n    bytesSlice(0, 32, hex),\n    bytesSlice(32, 64, hex),\n]; };\nvar toChecksum = function (address) {\n    var addressHash = (0, js_sha3_1.keccak256)(address.slice(2));\n    var checksumAddress = '0x';\n    for (var i = 0; i < 40; i++) {\n        checksumAddress +=\n            parseInt(addressHash[i + 2], 16) > 7\n                ? address[i + 2].toUpperCase()\n                : address[i + 2];\n    }\n    return checksumAddress;\n};\nvar hashMessage = function (message) {\n    var messageBytes = (0, index_1.hexToBytes)(Buffer.from(message, 'utf8').toString('hex'));\n    var messageBuffer = Buffer.from(messageBytes);\n    var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n    var preambleBuffer = Buffer.from(preamble);\n    var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n    return '0x' + (0, js_sha3_1.keccak256)(ethMessage.toString());\n};\nexports.hashMessage = hashMessage;\nvar recover = function (message, signature) {\n    var hash = (0, exports.hashMessage)(message);\n    var vals = decodeSignature(signature);\n    var vrs = {\n        v: bytesToNumber(vals[0]),\n        r: vals[1].slice(2),\n        s: vals[2].slice(2),\n    };\n    var ecPublicKey = secp256k1.recoverPubKey(Buffer.from(hash.slice(2), 'hex'), vrs, vrs.v < 2 ? vrs.v : 1 - (vrs.v % 2));\n    var publicKey = '0x' + ecPublicKey.encode('hex', false).slice(2);\n    var publicHash = '0x' + (0, js_sha3_1.keccak256)((0, index_1.hexToBytes)(publicKey));\n    return toChecksum('0x' + publicHash.slice(-40));\n};\nexports.recover = recover;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACG,WAAW,GAAG,KAAK,CAAC;AAC9C,IAAIC,SAAS,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIE,UAAU,GAAGF,OAAO,CAAC,UAAU,CAAC;AACpC,IAAIG,SAAS,GAAG,IAAID,UAAU,CAACE,EAAE,CAAC,WAAW,CAAC;AAC9C,IAAIC,WAAW,GAAG,UAAUC,CAAC,EAAE;EAAE,OAAO,CAACA,CAAC,CAACC,MAAM,GAAG,CAAC,IAAI,CAAC;AAAE,CAAC;AAC7D,IAAIC,UAAU,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EACjC,OAAO,IAAI,GAAGA,EAAE,CAACC,KAAK,CAACH,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAChD,CAAC;AACD,IAAIG,aAAa,GAAG,UAAUC,GAAG,EAAE;EAAE,OAAOC,QAAQ,CAACD,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAAE,CAAC;AACzE,IAAII,eAAe,GAAG,UAAUF,GAAG,EAAE;EAAE,OAAO,CAC1CN,UAAU,CAAC,EAAE,EAAEH,WAAW,CAACS,GAAG,CAAC,EAAEA,GAAG,CAAC,EACrCN,UAAU,CAAC,CAAC,EAAE,EAAE,EAAEM,GAAG,CAAC,EACtBN,UAAU,CAAC,EAAE,EAAE,EAAE,EAAEM,GAAG,CAAC,CAC1B;AAAE,CAAC;AACJ,IAAIG,UAAU,GAAG,UAAUC,OAAO,EAAE;EAChC,IAAIC,WAAW,GAAG,CAAC,CAAC,EAAEpB,SAAS,CAACqB,SAAS,EAAEF,OAAO,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5D,IAAIS,eAAe,GAAG,IAAI;EAC1B,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IACzBY,eAAe,IACXN,QAAQ,CAACI,WAAW,CAACV,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAC9BS,OAAO,CAACT,CAAC,GAAG,CAAC,CAAC,CAACa,WAAW,EAAE,GAC5BJ,OAAO,CAACT,CAAC,GAAG,CAAC,CAAC;EAC5B;EACA,OAAOY,eAAe;AAC1B,CAAC;AACD,IAAIvB,WAAW,GAAG,UAAUyB,OAAO,EAAE;EACjC,IAAIC,YAAY,GAAG,CAAC,CAAC,EAAEvB,OAAO,CAACwB,UAAU,EAAEC,MAAM,CAACC,IAAI,CAACJ,OAAO,EAAE,MAAM,CAAC,CAACK,QAAQ,CAAC,KAAK,CAAC,CAAC;EACxF,IAAIC,aAAa,GAAGH,MAAM,CAACC,IAAI,CAACH,YAAY,CAAC;EAC7C,IAAIM,QAAQ,GAAG,gCAAgC,GAAGN,YAAY,CAACjB,MAAM;EACrE,IAAIwB,cAAc,GAAGL,MAAM,CAACC,IAAI,CAACG,QAAQ,CAAC;EAC1C,IAAIE,UAAU,GAAGN,MAAM,CAACO,MAAM,CAAC,CAACF,cAAc,EAAEF,aAAa,CAAC,CAAC;EAC/D,OAAO,IAAI,GAAG,CAAC,CAAC,EAAE9B,SAAS,CAACqB,SAAS,EAAEY,UAAU,CAACJ,QAAQ,EAAE,CAAC;AACjE,CAAC;AACDjC,OAAO,CAACG,WAAW,GAAGA,WAAW;AACjC,IAAID,OAAO,GAAG,UAAU0B,OAAO,EAAEW,SAAS,EAAE;EACxC,IAAIC,IAAI,GAAG,CAAC,CAAC,EAAExC,OAAO,CAACG,WAAW,EAAEyB,OAAO,CAAC;EAC5C,IAAIa,IAAI,GAAGpB,eAAe,CAACkB,SAAS,CAAC;EACrC,IAAIG,GAAG,GAAG;IACNC,CAAC,EAAEzB,aAAa,CAACuB,IAAI,CAAC,CAAC,CAAC,CAAC;IACzBG,CAAC,EAAEH,IAAI,CAAC,CAAC,CAAC,CAACxB,KAAK,CAAC,CAAC,CAAC;IACnB4B,CAAC,EAAEJ,IAAI,CAAC,CAAC,CAAC,CAACxB,KAAK,CAAC,CAAC;EACtB,CAAC;EACD,IAAI6B,WAAW,GAAGtC,SAAS,CAACuC,aAAa,CAAChB,MAAM,CAACC,IAAI,CAACQ,IAAI,CAACvB,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAEyB,GAAG,EAAEA,GAAG,CAACC,CAAC,GAAG,CAAC,GAAGD,GAAG,CAACC,CAAC,GAAG,CAAC,GAAID,GAAG,CAACC,CAAC,GAAG,CAAE,CAAC;EACtH,IAAIK,SAAS,GAAG,IAAI,GAAGF,WAAW,CAACG,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAChC,KAAK,CAAC,CAAC,CAAC;EAChE,IAAIiC,UAAU,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE9C,SAAS,CAACqB,SAAS,EAAE,CAAC,CAAC,EAAEnB,OAAO,CAACwB,UAAU,EAAEkB,SAAS,CAAC,CAAC;EACpF,OAAO1B,UAAU,CAAC,IAAI,GAAG4B,UAAU,CAACjC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACnD,CAAC;AACDjB,OAAO,CAACE,OAAO,GAAGA,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}