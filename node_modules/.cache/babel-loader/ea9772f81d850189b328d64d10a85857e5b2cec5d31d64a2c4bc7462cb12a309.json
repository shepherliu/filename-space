{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction noop() {}\nexport function create() {\n  const chunkQueue = [];\n  let drainer = null;\n  let drainerResolver = noop;\n  let ended = false;\n  let outWait = null;\n  let outWaitResolver = noop;\n  const makeDrainer = () => {\n    if (!drainer) {\n      drainer = new Promise(resolve => {\n        drainerResolver = () => {\n          drainer = null;\n          drainerResolver = noop;\n          resolve();\n        };\n      });\n    }\n    return drainer;\n  };\n  const writer = {\n    write(chunk) {\n      chunkQueue.push(chunk);\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    },\n    async end() {\n      ended = true;\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    }\n  };\n  const iterator = {\n    async next() {\n      const chunk = chunkQueue.shift();\n      if (chunk) {\n        if (chunkQueue.length === 0) {\n          drainerResolver();\n        }\n        return {\n          done: false,\n          value: chunk\n        };\n      }\n      if (ended) {\n        drainerResolver();\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n      if (!outWait) {\n        outWait = new Promise(resolve => {\n          outWaitResolver = () => {\n            outWait = null;\n            outWaitResolver = noop;\n            return resolve(iterator.next());\n          };\n        });\n      }\n      return outWait;\n    }\n  };\n  return {\n    writer,\n    iterator\n  };\n}","map":{"version":3,"names":["noop","create","chunkQueue","drainer","drainerResolver","ended","outWait","outWaitResolver","makeDrainer","Promise","resolve","writer","write","chunk","push","end","iterator","next","shift","length","done","value","undefined"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/@ipld/car/esm/lib/iterator-channel.js"],"sourcesContent":["function noop() {\n}\nexport function create() {\n  const chunkQueue = [];\n  let drainer = null;\n  let drainerResolver = noop;\n  let ended = false;\n  let outWait = null;\n  let outWaitResolver = noop;\n  const makeDrainer = () => {\n    if (!drainer) {\n      drainer = new Promise(resolve => {\n        drainerResolver = () => {\n          drainer = null;\n          drainerResolver = noop;\n          resolve();\n        };\n      });\n    }\n    return drainer;\n  };\n  const writer = {\n    write(chunk) {\n      chunkQueue.push(chunk);\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    },\n    async end() {\n      ended = true;\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    }\n  };\n  const iterator = {\n    async next() {\n      const chunk = chunkQueue.shift();\n      if (chunk) {\n        if (chunkQueue.length === 0) {\n          drainerResolver();\n        }\n        return {\n          done: false,\n          value: chunk\n        };\n      }\n      if (ended) {\n        drainerResolver();\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n      if (!outWait) {\n        outWait = new Promise(resolve => {\n          outWaitResolver = () => {\n            outWait = null;\n            outWaitResolver = noop;\n            return resolve(iterator.next());\n          };\n        });\n      }\n      return outWait;\n    }\n  };\n  return {\n    writer,\n    iterator\n  };\n}"],"mappings":";AAAA,SAASA,IAAI,GAAG,CAChB;AACA,OAAO,SAASC,MAAM,GAAG;EACvB,MAAMC,UAAU,GAAG,EAAE;EACrB,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,eAAe,GAAGJ,IAAI;EAC1B,IAAIK,KAAK,GAAG,KAAK;EACjB,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,eAAe,GAAGP,IAAI;EAC1B,MAAMQ,WAAW,GAAG,MAAM;IACxB,IAAI,CAACL,OAAO,EAAE;MACZA,OAAO,GAAG,IAAIM,OAAO,CAACC,OAAO,IAAI;QAC/BN,eAAe,GAAG,MAAM;UACtBD,OAAO,GAAG,IAAI;UACdC,eAAe,GAAGJ,IAAI;UACtBU,OAAO,EAAE;QACX,CAAC;MACH,CAAC,CAAC;IACJ;IACA,OAAOP,OAAO;EAChB,CAAC;EACD,MAAMQ,MAAM,GAAG;IACbC,KAAK,CAACC,KAAK,EAAE;MACXX,UAAU,CAACY,IAAI,CAACD,KAAK,CAAC;MACtB,MAAMV,OAAO,GAAGK,WAAW,EAAE;MAC7BD,eAAe,EAAE;MACjB,OAAOJ,OAAO;IAChB,CAAC;IACD,MAAMY,GAAG,GAAG;MACVV,KAAK,GAAG,IAAI;MACZ,MAAMF,OAAO,GAAGK,WAAW,EAAE;MAC7BD,eAAe,EAAE;MACjB,OAAOJ,OAAO;IAChB;EACF,CAAC;EACD,MAAMa,QAAQ,GAAG;IACf,MAAMC,IAAI,GAAG;MACX,MAAMJ,KAAK,GAAGX,UAAU,CAACgB,KAAK,EAAE;MAChC,IAAIL,KAAK,EAAE;QACT,IAAIX,UAAU,CAACiB,MAAM,KAAK,CAAC,EAAE;UAC3Bf,eAAe,EAAE;QACnB;QACA,OAAO;UACLgB,IAAI,EAAE,KAAK;UACXC,KAAK,EAAER;QACT,CAAC;MACH;MACA,IAAIR,KAAK,EAAE;QACTD,eAAe,EAAE;QACjB,OAAO;UACLgB,IAAI,EAAE,IAAI;UACVC,KAAK,EAAEC;QACT,CAAC;MACH;MACA,IAAI,CAAChB,OAAO,EAAE;QACZA,OAAO,GAAG,IAAIG,OAAO,CAACC,OAAO,IAAI;UAC/BH,eAAe,GAAG,MAAM;YACtBD,OAAO,GAAG,IAAI;YACdC,eAAe,GAAGP,IAAI;YACtB,OAAOU,OAAO,CAACM,QAAQ,CAACC,IAAI,EAAE,CAAC;UACjC,CAAC;QACH,CAAC,CAAC;MACJ;MACA,OAAOX,OAAO;IAChB;EACF,CAAC;EACD,OAAO;IACLK,MAAM;IACNK;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}