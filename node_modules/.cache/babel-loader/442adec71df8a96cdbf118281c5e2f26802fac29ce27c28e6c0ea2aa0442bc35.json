{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Resolution = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar Zns_1 = __importDefault(require(\"./Zns\"));\nvar Uns_1 = __importDefault(require(\"./Uns\"));\nvar UdApi_1 = __importDefault(require(\"./UdApi\"));\nvar publicTypes_1 = require(\"./types/publicTypes\");\nvar resolutionError_1 = __importStar(require(\"./errors/resolutionError\"));\nvar DnsUtils_1 = __importDefault(require(\"./utils/DnsUtils\"));\nvar utils_1 = require(\"./utils\");\nvar Eip1993Factories_1 = require(\"./utils/Eip1993Factories\");\nvar Networking_1 = __importDefault(require(\"./utils/Networking\"));\nvar prepareAndValidate_1 = require(\"./utils/prepareAndValidate\");\nvar namehash_1 = require(\"./utils/namehash\");\n/**\n * Blockchain domain Resolution library - Resolution.\n * @example\n * ```\n * import Resolution from '@unstoppabledomains/resolution';\n *\n * let resolution = new Resolution({ blockchain: {\n *        uns: {\n *           url: \"https://eth-mainnet.alchemyapi.io/v2/GmQ8X1FHf-WDEry0BBSn0RgjVhjHkRmS\",\n *           network: \"mainnet\"\n *        }\n *      }\n *   });\n *\n * let domain = \"brad.zil\";\n * resolution.addr(domain, \"eth\").then(addr => console.log(addr));;\n * ```\n */\nvar Resolution = /** @class */function () {\n  function Resolution(_a) {\n    var _b;\n    var _c = _a === void 0 ? {} : _a,\n      _d = _c.sourceConfig,\n      sourceConfig = _d === void 0 ? undefined : _d;\n    var uns = isApi(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns) ? new UdApi_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns) : new Uns_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns);\n    var zns = isApi(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns) ? new UdApi_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns) : new Zns_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns);\n    // If both UNS and ZNS use the same UdApi providers, we don't want to call the API twice as it would return same\n    // responses. It should be enough to compare just the URLs, as the network param isn't actually used in the calls.\n    var equalUdApiProviders = uns instanceof UdApi_1.default && zns instanceof UdApi_1.default && uns.url === zns.url;\n    // If a user configures the lib with an API source, we still want to initialise native blockchain services to access\n    // some non-async methods such as namehash, as they are unavailable in the UdApi service.\n    this.serviceMap = (_b = {}, _b[publicTypes_1.NamingServiceName.UNS] = {\n      usedServices: [uns],\n      native: isApi(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns) ? new Uns_1.default() : uns\n    }, _b[publicTypes_1.NamingServiceName.ZNS] = {\n      usedServices: equalUdApiProviders ? [uns] : [uns, zns],\n      native: isApi(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns) ? new Zns_1.default() : zns\n    }, _b);\n  }\n  /**\n   * AutoConfigure the blockchain network for UNS\n   * We make a \"net_version\" JSON RPC call to the blockchain either via url or with the help of given provider.\n   * @param sourceConfig - configuration object for uns\n   * @returns configured Resolution object\n   */\n  Resolution.autoNetwork = function (sourceConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resolution, uns;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            resolution = new this();\n            if (!sourceConfig.uns) return [3 /*break*/, 2];\n            return [4 /*yield*/, Uns_1.default.autoNetwork(sourceConfig.uns)];\n          case 1:\n            uns = _a.sent();\n            resolution.serviceMap[publicTypes_1.NamingServiceName.UNS] = {\n              usedServices: [uns],\n              native: uns\n            };\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/, resolution];\n        }\n      });\n    });\n  };\n  /**\n   * Creates a resolution with configured infura id for uns\n   * @param infura - infura project id\n   * @param networks - an optional object that describes what network to use when connecting UNS default is mainnet\n   */\n  Resolution.infura = function (infura, networks) {\n    var _a, _b, _c, _d;\n    return new this({\n      sourceConfig: {\n        uns: {\n          locations: {\n            Layer1: {\n              url: (0, utils_1.signedLink)(infura, ((_a = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _a === void 0 ? void 0 : _a.locations.Layer1.network) || 'mainnet', 'infura'),\n              network: ((_b = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _b === void 0 ? void 0 : _b.locations.Layer1.network) || 'mainnet'\n            },\n            Layer2: {\n              url: (0, utils_1.signedLink)(infura, ((_c = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _c === void 0 ? void 0 : _c.locations.Layer2.network) || 'polygon-mainnet', 'infura'),\n              network: ((_d = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _d === void 0 ? void 0 : _d.locations.Layer2.network) || 'polygon-mainnet'\n            }\n          }\n        }\n      }\n    });\n  };\n  /**\n   * Creates a resolution with configured alchemy API keys for uns\n   * @param alchemy - alchemy API keys\n   * @param networks - an optional object that describes what network to use when connecting UNS default is mainnet\n   */\n  Resolution.alchemy = function (alchemy, networks) {\n    var _a, _b, _c, _d;\n    return new this({\n      sourceConfig: {\n        uns: {\n          locations: {\n            Layer1: {\n              url: (0, utils_1.signedLink)(alchemy, ((_a = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _a === void 0 ? void 0 : _a.locations.Layer1.network) || 'mainnet'),\n              network: ((_b = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _b === void 0 ? void 0 : _b.locations.Layer1.network) || 'mainnet'\n            },\n            Layer2: {\n              url: (0, utils_1.signedLink)(alchemy, ((_c = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _c === void 0 ? void 0 : _c.locations.Layer2.network) || 'polygon-mainnet'),\n              network: ((_d = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _d === void 0 ? void 0 : _d.locations.Layer2.network) || 'polygon-mainnet'\n            }\n          }\n        }\n      }\n    });\n  };\n  /**\n   * Creates a resolution instance with configured provider\n   * @param networks - an object that describes what network to use when connecting UNS or ZNS default is mainnet\n   * @see https://eips.ethereum.org/EIPS/eip-1193\n   */\n  Resolution.fromResolutionProvider = function (networks) {\n    if (networks.uns) {\n      return this.fromEthereumEip1193Provider({\n        uns: networks.uns\n      });\n    }\n    if (networks.zns) {\n      return this.fromZilliqaProvider(networks.zns.provider, networks);\n    }\n    throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.ServiceProviderError, {\n      providerMessage: 'Must specify network for uns or zns'\n    });\n  };\n  /**\n   * Creates a resolution instance with configured provider\n   * @param networks - an object that describes what network to use when connecting UNS default is mainnet\n   * @see https://eips.ethereum.org/EIPS/eip-1193\n   */\n  Resolution.fromEthereumEip1193Provider = function (networks) {\n    var sourceConfig = {};\n    if (networks.uns) {\n      sourceConfig.uns = {\n        locations: {\n          Layer1: {\n            provider: networks.uns.locations.Layer1.provider,\n            network: networks.uns.locations.Layer1.network || 'mainnet'\n          },\n          Layer2: {\n            provider: networks.uns.locations.Layer2.provider,\n            network: networks.uns.locations.Layer2.network || 'polygon-mainnet'\n          }\n        }\n      };\n    }\n    return new this({\n      sourceConfig: sourceConfig\n    });\n  };\n  /**\n   * Creates a resolution instance with configured provider\n   * @param provider - any provider compatible with EIP-1193\n   * @param networks - an optional object that describes what network to use when connecting ZNS default is mainnet\n   * @see https://eips.ethereum.org/EIPS/eip-1193\n   */\n  Resolution.fromZilliqaProvider = function (provider, networks) {\n    var _a;\n    return new this({\n      sourceConfig: {\n        zns: {\n          provider: provider,\n          network: ((_a = networks === null || networks === void 0 ? void 0 : networks.zns) === null || _a === void 0 ? void 0 : _a.network) || 'mainnet'\n        }\n      }\n    });\n  };\n  /**\n   * Create a resolution instance from web3 0.x version provider\n   * @param networks - Ethereum network configuration with 0.x version provider from web3 ( must implement sendAsync(payload, callback) )\n   * @see https://github.com/ethereum/web3.js/blob/0.20.7/lib/web3/httpprovider.js#L116\n   */\n  Resolution.fromWeb3Version0Provider = function (networks) {\n    return this.fromEthereumEip1193Provider({\n      uns: networks.uns ? {\n        locations: {\n          Layer1: {\n            network: networks.uns.locations.Layer1.network,\n            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version0Provider(networks.uns.locations.Layer1.provider)\n          },\n          Layer2: {\n            network: networks.uns.locations.Layer2.network,\n            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version0Provider(networks.uns.locations.Layer2.provider)\n          }\n        }\n      } : undefined\n    });\n  };\n  /**\n   * Create a resolution instance from web3 1.x version provider\n   * @param networks - an optional object with 1.x version provider from web3 ( must implement send(payload, callback) ) that describes what network to use when connecting UNS default is mainnet\n   * @see https://github.com/ethereum/web3.js/blob/1.x/packages/web3-core-helpers/types/index.d.ts#L165\n   * @see https://github.com/ethereum/web3.js/blob/1.x/packages/web3-providers-http/src/index.js#L95\n   */\n  Resolution.fromWeb3Version1Provider = function (networks) {\n    return this.fromEthereumEip1193Provider({\n      uns: networks.uns ? {\n        locations: {\n          Layer1: {\n            network: networks.uns.locations.Layer1.network,\n            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version1Provider(networks.uns.locations.Layer1.provider)\n          },\n          Layer2: {\n            network: networks.uns.locations.Layer2.network,\n            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version1Provider(networks.uns.locations.Layer2.provider)\n          }\n        }\n      } : undefined\n    });\n  };\n  /**\n   * Creates instance of resolution from provider that implements Ethers Provider#call interface.\n   * This wrapper support only `eth_call` method for now, which is enough for all the current Resolution functionality\n   * @param networks - an object that describes what network to use when connecting UNS default is mainnet\n   * @see https://github.com/ethers-io/ethers.js/blob/v4-legacy/providers/abstract-provider.d.ts#L91\n   * @see https://github.com/ethers-io/ethers.js/blob/v5.0.4/packages/abstract-provider/src.ts/index.ts#L224\n   * @see https://docs.ethers.io/ethers.js/v5-beta/api-providers.html#jsonrpcprovider-inherits-from-provider\n   * @see https://github.com/ethers-io/ethers.js/blob/master/packages/providers/src.ts/json-rpc-provider.ts\n   */\n  Resolution.fromEthersProvider = function (networks) {\n    return this.fromEthereumEip1193Provider({\n      uns: networks.uns ? {\n        locations: {\n          Layer1: {\n            network: networks.uns.locations.Layer1.network,\n            provider: Eip1993Factories_1.Eip1993Factories.fromEthersProvider(networks.uns.locations.Layer1.provider)\n          },\n          Layer2: {\n            network: networks.uns.locations.Layer2.network,\n            provider: Eip1993Factories_1.Eip1993Factories.fromEthersProvider(networks.uns.locations.Layer2.provider)\n          }\n        }\n      } : undefined\n    });\n  };\n  /**\n   * Resolves given domain name to a specific currency address if exists\n   * @async\n   * @param domain - domain name to be resolved\n   * @param ticker - currency ticker like BTC, ETH, ZIL\n   * @throws [[ResolutionError]] if address is not found\n   * @returns A promise that resolves in an address\n   */\n  Resolution.prototype.addr = function (domain, ticker) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.record(domain, \"crypto.\".concat(ticker.toUpperCase(), \".address\"))];\n      });\n    });\n  };\n  /**\n   * Read multi-chain currency address if exists\n   * @async\n   * @param domain - domain name to be resolved\n   * @param ticker - currency ticker (USDT, FTM, etc.)\n   * @param chain - chain version, usually means blockchain ( ERC20, BEP2, OMNI, etc. )\n   * @throws [[ResolutionError]] if address is not found\n   * @returns A promise that resolves in an adress\n   */\n  Resolution.prototype.multiChainAddr = function (domain, ticker, chain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var recordKey;\n      return __generator(this, function (_a) {\n        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n        recordKey = \"crypto.\".concat(ticker.toUpperCase(), \".version.\").concat(chain.toUpperCase(), \".address\");\n        return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n          return service.record(domain, recordKey);\n        })];\n      });\n    });\n  };\n  /**\n   * Resolves given domain name to a verified twitter handle\n   * @async\n   * @param domain - domain name to be resolved\n   * @throws [[ResolutionError]] if twitter is not found\n   * @returns A promise that resolves in a verified twitter handle\n   */\n  Resolution.prototype.twitter = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n        return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n          return service.twitter(domain);\n        })];\n      });\n    });\n  };\n  /**\n   * Resolve a chat id from the domain record\n   * @param domain - domain name to be resolved\n   * @throws [[ResolutionError]]\n   * @returns A promise that resolves in chatId\n   */\n  Resolution.prototype.chatId = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.record(domain, 'gundb.username.value')];\n      });\n    });\n  };\n  /**\n   * Resolve a gundb public key from the domain record\n   * @param domain - domain name to be resolved\n   * @throws [[ResolutionError]]\n   * @returns a promise that resolves in gundb public key\n   */\n  Resolution.prototype.chatPk = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.record(domain, 'gundb.public_key.value')];\n      });\n    });\n  };\n  /**\n   * Resolves the IPFS hash configured for domain records on ZNS\n   * @param domain - domain name\n   * @throws [[ResolutionError]]\n   */\n  Resolution.prototype.ipfsHash = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n        return [2 /*return*/, this.getPreferableNewRecord(domain, 'dweb.ipfs.hash', 'ipfs.html.value')];\n      });\n    });\n  };\n  /**\n   * Resolves the httpUrl attached to domain\n   * @param domain - domain name\n   */\n  Resolution.prototype.httpUrl = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n        return [2 /*return*/, this.getPreferableNewRecord(domain, 'browser.redirect_url', 'ipfs.redirect_domain.value')];\n      });\n    });\n  };\n  /**\n   * Resolves the ipfs email field from whois configurations\n   * @param domain - domain name\n   * @throws [[ResolutionError]]\n   * @returns A Promise that resolves in an email address configured for this domain whois\n   */\n  Resolution.prototype.email = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.record(domain, 'whois.email.value')];\n      });\n    });\n  };\n  /**\n   * @returns the resolver address for a specific domain\n   * @param domain - domain to look for\n   */\n  Resolution.prototype.resolver = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resolver;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n            return [4 /*yield*/, this.callServiceForDomain(domain, function (service) {\n              return service.resolver(domain);\n            })];\n          case 1:\n            resolver = _a.sent();\n            if (!resolver) {\n              throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnspecifiedResolver, {\n                domain: domain\n              });\n            }\n            return [2 /*return*/, resolver];\n        }\n      });\n    });\n  };\n  /**\n   * @param domain - domain name\n   * @returns An owner address of the domain\n   */\n  Resolution.prototype.owner = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n        return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n          return service.owner(domain);\n        })];\n      });\n    });\n  };\n  /**\n   * @param domain - domain name\n   * @param recordKey - a name of a record to be resolved\n   * @returns A record value promise for a given record name\n   */\n  Resolution.prototype.record = function (domain, recordKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n        return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n          return service.record(domain, recordKey);\n        })];\n      });\n    });\n  };\n  /**\n   * @param domain domain name\n   * @param keys Array of record keys to be resolved\n   * @returns A Promise with key-value mapping of domain records\n   */\n  Resolution.prototype.records = function (domain, keys) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n        return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n          return service.records(domain, keys);\n        })];\n      });\n    });\n  };\n  /**\n   * @param domain domain name\n   * @returns A Promise of whether or not the domain belongs to a wallet\n   */\n  Resolution.prototype.isRegistered = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n        return [2 /*return*/, this.callServiceForDomainBoolean(domain, function (service) {\n          return service.isRegistered(domain);\n        }, {\n          throwIfUnsupportedDomain: true,\n          expectedValue: true\n        })];\n      });\n    });\n  };\n  /**\n   * @param domain domain name\n   * @returns A Promise of whether or not the domain is available\n   */\n  Resolution.prototype.isAvailable = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n        return [2 /*return*/, this.callServiceForDomainBoolean(domain, function (service) {\n          return service.isAvailable(domain);\n        }, {\n          throwIfUnsupportedDomain: true,\n          expectedValue: false\n        })];\n      });\n    });\n  };\n  /**\n   * @returns Produces a namehash from supported naming service in hex format with 0x prefix.\n   * Corresponds to ERC721 token id in case of Ethereum based naming service like UNS.\n   * @param domain domain name to be converted\n   * @param namingService \"UNS\" or \"ZNS\" (uses keccak256 or sha256 algorithm respectively)\n   * @param options formatting options\n   * @throws [[ResolutionError]] with UnsupportedDomain error code if domain extension is unknown\n   */\n  Resolution.prototype.namehash = function (domain, namingService, options) {\n    if (options === void 0) {\n      options = publicTypes_1.NamehashOptionsDefault;\n    }\n    var service = this.serviceMap[namingService];\n    if (!service) {\n      throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedService, {\n        namingService: namingService\n      });\n    }\n    domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n    return this.formatNamehash(service.native.namehash(domain), options);\n  };\n  /**\n   * @returns a namehash of a subdomain with name label\n   * @param parent namehash of a parent domain\n   * @param label subdomain name\n   * @param namingService \"UNS\" or \"ZNS\" (uses keccak256 or sha256 algorithm respectively)\n   * @param options formatting options\n   */\n  Resolution.prototype.childhash = function (parent, label, namingService, options) {\n    if (options === void 0) {\n      options = publicTypes_1.NamehashOptionsDefault;\n    }\n    var service = this.serviceMap[namingService];\n    if (!service) {\n      throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedService, {\n        namingService: namingService\n      });\n    }\n    return this.formatNamehash(service.native.childhash(parent, label), options);\n  };\n  Resolution.prototype.formatNamehash = function (hash, options) {\n    hash = hash.replace('0x', '');\n    if (options.format === 'dec') {\n      return new bn_js_1.default(hash, 'hex').toString(10);\n    } else {\n      return options.prefix ? '0x' + hash : hash;\n    }\n  };\n  /**\n   * Checks weather the domain name matches the hash\n   * @param domain - domain name to check against\n   * @param hash - hash obtained from the blockchain\n   * @param namingService - \"UNS\" or \"ZNS\" (uses keccak256 or sha256 algorithm respectively)\n   */\n  Resolution.prototype.isValidHash = function (domain, hash, namingService) {\n    var service = this.serviceMap[namingService];\n    if (!service) {\n      throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedService, {\n        namingService: namingService\n      });\n    }\n    domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n    return service.native.namehash(domain) === hash;\n  };\n  /**\n   * Checks if the domain name is valid according to naming service rules\n   * for valid domain names.\n   * @param domain - domain name to be checked\n   */\n  Resolution.prototype.isSupportedDomain = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n        return [2 /*return*/, this.callServiceForDomainBoolean(domain, function (service) {\n          return service.isSupportedDomain(domain);\n        }, {\n          throwIfUnsupportedDomain: false,\n          expectedValue: true\n        })];\n      });\n    });\n  };\n  /**\n   * Returns all record keys of the domain.\n   * This method is strongly unrecommended for production use due to lack of support for many ethereum service providers and low performance\n   * @param domain - domain name\n   */\n  Resolution.prototype.allRecords = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n        return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n          return service.allRecords(domain);\n        })];\n      });\n    });\n  };\n  Resolution.prototype.allNonEmptyRecords = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var records, nonEmptyRecords, _i, _a, _b, key, value;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this.allRecords(domain)];\n          case 1:\n            records = _c.sent();\n            nonEmptyRecords = {};\n            for (_i = 0, _a = Object.entries(records); _i < _a.length; _i++) {\n              _b = _a[_i], key = _b[0], value = _b[1];\n              if (value) {\n                nonEmptyRecords[key] = value;\n              }\n            }\n            return [2 /*return*/, nonEmptyRecords];\n        }\n      });\n    });\n  };\n  Resolution.prototype.dns = function (domain, types) {\n    return __awaiter(this, void 0, void 0, function () {\n      var dnsUtils, dnsRecordKeys, blockchainData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            dnsUtils = new DnsUtils_1.default();\n            domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n            dnsRecordKeys = this.getDnsRecordKeys(types);\n            return [4 /*yield*/, this.callServiceForDomain(domain, function (service) {\n              return service.records(domain, dnsRecordKeys);\n            })];\n          case 1:\n            blockchainData = _a.sent();\n            return [2 /*return*/, dnsUtils.toList(blockchainData)];\n        }\n      });\n    });\n  };\n  /**\n   * Retrieves the tokenURI from the registry smart contract.\n   * @returns the ERC721Metadata#tokenURI contract method result\n   * @param domain - domain name\n   */\n  Resolution.prototype.tokenURI = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namehash;\n      return __generator(this, function (_a) {\n        namehash = this.namehash(domain, publicTypes_1.NamingServiceName.UNS);\n        return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n          return service.getTokenUri(namehash);\n        })];\n      });\n    });\n  };\n  /**\n   * Retrieves the data from the endpoint provided by tokenURI from the registry smart contract.\n   * @returns the JSON response of the token URI endpoint\n   * @param domain - domain name\n   */\n  Resolution.prototype.tokenURIMetadata = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var tokenUri;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.tokenURI(domain)];\n          case 1:\n            tokenUri = _a.sent();\n            return [2 /*return*/, this.getMetadataFromTokenURI(tokenUri)];\n        }\n      });\n    });\n  };\n  /**\n   * Retrieves address of registry contract used for domain\n   * @param domain - domain name\n   * @returns Registry contract address\n   */\n  Resolution.prototype.registryAddress = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n          return service.registryAddress(domain);\n        })];\n      });\n    });\n  };\n  /**\n   * Retrieves the domain name from tokenId by parsing registry smart contract event logs.\n   * @throws {ResolutionError} if returned domain name doesn't match the original namhash.\n   * @returns the domain name retrieved from token metadata\n   * @param hash - domain hash\n   * @param service - nameservice which is used for lookup\n   */\n  Resolution.prototype.unhash = function (hash, service) {\n    return __awaiter(this, void 0, void 0, function () {\n      var services, method;\n      return __generator(this, function (_a) {\n        hash = (0, namehash_1.fromDecStringToHex)(hash);\n        services = this.serviceMap[service].usedServices;\n        method = services[services.length - 1];\n        return [2 /*return*/, method.getDomainFromTokenId(hash)];\n      });\n    });\n  };\n  /**\n   * Retrieves address of registry contract used for domain\n   * @param domains - domain name\n   * @returns Promise<Locations> - A map of domain name and Location (a set of attributes like blockchain,\n   */\n  Resolution.prototype.locations = function (domains) {\n    return __awaiter(this, void 0, void 0, function () {\n      var zilDomains, unsPromise, znsServices, znsService, znsPromise, unsLocations, emptyZilEntries, znsLocations, _i, emptyZilEntries_1, domain;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            zilDomains = domains.filter(function (domain) {\n              return domain.endsWith('.zil');\n            });\n            unsPromise = this.serviceMap.UNS.usedServices[0].locations(domains);\n            if (!zilDomains.length) {\n              return [2 /*return*/, unsPromise];\n            }\n            znsServices = this.serviceMap.ZNS.usedServices;\n            znsService = znsServices[znsServices.length - 1];\n            znsPromise = (0, utils_1.wrapResult)(function () {\n              return znsService.locations(zilDomains);\n            });\n            return [4 /*yield*/, unsPromise];\n          case 1:\n            unsLocations = _a.sent();\n            emptyZilEntries = Object.entries(unsLocations).filter(function (_a) {\n              var domain = _a[0],\n                location = _a[1];\n              return domain.endsWith('.zil') && !location;\n            });\n            if (!emptyZilEntries.length) {\n              return [2 /*return*/, unsLocations];\n            }\n            return [4 /*yield*/, znsPromise.then(utils_1.unwrapResult)];\n          case 2:\n            znsLocations = _a.sent();\n            for (_i = 0, emptyZilEntries_1 = emptyZilEntries; _i < emptyZilEntries_1.length; _i++) {\n              domain = emptyZilEntries_1[_i][0];\n              unsLocations[domain] = znsLocations[domain];\n            }\n            return [2 /*return*/, unsLocations];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the token ID that is the primary resolution of the provided address\n   * @param address - owner's address\n   * @returns Promise<tokenId> - token ID that is the primary resolution of the provided address\n   */\n  Resolution.prototype.reverseTokenId = function (address, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var tokenId;\n      return __generator(this, function (_a) {\n        tokenId = this.reverseGetTokenId(address, options === null || options === void 0 ? void 0 : options.location);\n        return [2 /*return*/, tokenId];\n      });\n    });\n  };\n  /**\n   * Returns the domain that is the primary resolution of the provided address\n   * @param address - owner's address\n   * @returns Promise<URL> - domain URL that is the primary resolution of the provided addresss\n   */\n  Resolution.prototype.reverse = function (address, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var tokenId;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.reverseGetTokenId(address, options === null || options === void 0 ? void 0 : options.location)];\n          case 1:\n            tokenId = _a.sent();\n            if (tokenId) {\n              return [2 /*return*/, this.unhash(tokenId, publicTypes_1.NamingServiceName.UNS)];\n            }\n            return [2 /*return*/, null];\n        }\n      });\n    });\n  };\n  Resolution.prototype.getMetadataFromTokenURI = function (tokenUri) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resp, _a, _b;\n      var _c;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            return [4 /*yield*/, Networking_1.default.fetch(tokenUri, {})];\n          case 1:\n            resp = _d.sent();\n            if (resp.ok) {\n              return [2 /*return*/, resp.json()];\n            }\n            _a = resolutionError_1.default.bind;\n            _b = [void 0, resolutionError_1.ResolutionErrorCode.ServiceProviderError];\n            _c = {};\n            return [4 /*yield*/, resp.text()];\n          case 2:\n            throw new (_a.apply(resolutionError_1.default, _b.concat([(_c.providerMessage = _d.sent(), _c.method = 'UDAPI', _c.methodName = 'tokenURIMetadata', _c)])))();\n        }\n      });\n    });\n  };\n  Resolution.prototype.getDnsRecordKeys = function (types) {\n    var records = ['dns.ttl'];\n    types.forEach(function (type) {\n      records.push(\"dns.\".concat(type));\n      records.push(\"dns.\".concat(type, \".ttl\"));\n    });\n    return records;\n  };\n  Resolution.prototype.getPreferableNewRecord = function (domain, newRecord, oldRecord) {\n    return __awaiter(this, void 0, void 0, function () {\n      var records;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.records(domain, [newRecord, oldRecord])];\n          case 1:\n            records = _a.sent();\n            if (!records[newRecord] && !records[oldRecord]) {\n              throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.RecordNotFound, {\n                recordName: newRecord,\n                domain: domain\n              });\n            }\n            return [2 /*return*/, records[newRecord] || records[oldRecord]];\n        }\n      });\n    });\n  };\n  Resolution.prototype.callServiceForDomain = function (domain, func) {\n    return __awaiter(this, void 0, void 0, function () {\n      var serviceName, servicePromises, _i, servicePromises_1, servicePromise, serviceCallResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            serviceName = (0, utils_1.findNamingServiceName)(domain);\n            if (!serviceName) {\n              throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedDomain, {\n                domain: domain\n              });\n            }\n            servicePromises = this.serviceMap[serviceName].usedServices.map(function (service) {\n              return (0, utils_1.wrapResult)(function () {\n                return func(service);\n              });\n            });\n            _i = 0, servicePromises_1 = servicePromises;\n            _a.label = 1;\n          case 1:\n            if (!(_i < servicePromises_1.length)) return [3 /*break*/, 4];\n            servicePromise = servicePromises_1[_i];\n            return [4 /*yield*/, servicePromise];\n          case 2:\n            serviceCallResult = _a.sent();\n            if (serviceCallResult.error !== null) {\n              if (!(serviceCallResult.error instanceof resolutionError_1.default && serviceCallResult.error.code === resolutionError_1.ResolutionErrorCode.UnregisteredDomain)) {\n                throw serviceCallResult.error;\n              }\n            } else {\n              return [2 /*return*/, serviceCallResult.result];\n            }\n            _a.label = 3;\n          case 3:\n            _i++;\n            return [3 /*break*/, 1];\n          case 4:\n            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnregisteredDomain, {\n              domain: domain\n            });\n        }\n      });\n    });\n  };\n  // Expects that a called method never throws the `ResolutionErrorCode.UnregisteredDomain` (it doesn't handle it).\n  Resolution.prototype.callServiceForDomainBoolean = function (domain, func, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var serviceName, servicePromises, _i, servicePromises_2, servicePromise, _a, result, error;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            serviceName = (0, utils_1.findNamingServiceName)(domain);\n            if (!serviceName) {\n              if (!options.throwIfUnsupportedDomain) {\n                return [2 /*return*/, !options.expectedValue];\n              }\n              throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedDomain, {\n                domain: domain\n              });\n            }\n            servicePromises = this.serviceMap[serviceName].usedServices.map(function (service) {\n              return (0, utils_1.wrapResult)(function () {\n                return func(service);\n              });\n            });\n            _i = 0, servicePromises_2 = servicePromises;\n            _b.label = 1;\n          case 1:\n            if (!(_i < servicePromises_2.length)) return [3 /*break*/, 4];\n            servicePromise = servicePromises_2[_i];\n            return [4 /*yield*/, servicePromise];\n          case 2:\n            _a = _b.sent(), result = _a.result, error = _a.error;\n            if (error) {\n              if (!(error instanceof resolutionError_1.default && error.code === resolutionError_1.ResolutionErrorCode.UnregisteredDomain)) {\n                throw error;\n              }\n            } else if (result === options.expectedValue) {\n              // If the result is not the one which is expected, we don't want to return it immediately.\n              return [2 /*return*/, result];\n            }\n            _b.label = 3;\n          case 3:\n            _i++;\n            return [3 /*break*/, 1];\n          case 4:\n            return [2 /*return*/, !options.expectedValue];\n        }\n      });\n    });\n  };\n  Resolution.prototype.reverseGetTokenId = function (address, location) {\n    return __awaiter(this, void 0, void 0, function () {\n      var service, tokenId;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            service = this.serviceMap['UNS'].native;\n            return [4 /*yield*/, service.reverseOf(address, location)];\n          case 1:\n            tokenId = _a.sent();\n            return [2 /*return*/, tokenId];\n        }\n      });\n    });\n  };\n  return Resolution;\n}();\nexports.Resolution = Resolution;\nexports.default = Resolution;\nfunction isApi(obj) {\n  return obj && obj.api;\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","op","TypeError","pop","length","push","__importDefault","exports","Resolution","bn_js_1","require","Zns_1","Uns_1","UdApi_1","publicTypes_1","resolutionError_1","DnsUtils_1","utils_1","Eip1993Factories_1","Networking_1","prepareAndValidate_1","namehash_1","_a","_b","_c","_d","sourceConfig","uns","isApi","default","zns","equalUdApiProviders","url","serviceMap","NamingServiceName","UNS","usedServices","native","ZNS","autoNetwork","resolution","infura","networks","locations","Layer1","signedLink","network","Layer2","alchemy","fromResolutionProvider","fromEthereumEip1193Provider","fromZilliqaProvider","provider","ResolutionErrorCode","ServiceProviderError","providerMessage","fromWeb3Version0Provider","Eip1993Factories","fromWeb3Version1Provider","fromEthersProvider","addr","domain","ticker","record","concat","toUpperCase","multiChainAddr","chain","recordKey","prepareAndValidateDomain","callServiceForDomain","service","twitter","chatId","chatPk","ipfsHash","getPreferableNewRecord","httpUrl","email","resolver","UnspecifiedResolver","owner","records","keys","isRegistered","callServiceForDomainBoolean","throwIfUnsupportedDomain","expectedValue","isAvailable","namehash","namingService","options","NamehashOptionsDefault","UnsupportedService","formatNamehash","childhash","parent","hash","replace","format","toString","prefix","isValidHash","isSupportedDomain","allRecords","allNonEmptyRecords","nonEmptyRecords","_i","key","entries","dns","types","dnsUtils","dnsRecordKeys","blockchainData","getDnsRecordKeys","toList","tokenURI","getTokenUri","tokenURIMetadata","tokenUri","getMetadataFromTokenURI","registryAddress","unhash","services","method","fromDecStringToHex","getDomainFromTokenId","domains","zilDomains","unsPromise","znsServices","znsService","znsPromise","unsLocations","emptyZilEntries","znsLocations","emptyZilEntries_1","filter","endsWith","wrapResult","location","unwrapResult","reverseTokenId","address","tokenId","reverseGetTokenId","reverse","resp","fetch","ok","json","bind","text","methodName","forEach","type","newRecord","oldRecord","RecordNotFound","recordName","func","serviceName","servicePromises","servicePromises_1","servicePromise","serviceCallResult","findNamingServiceName","UnsupportedDomain","map","error","code","UnregisteredDomain","servicePromises_2","reverseOf","obj","api"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/@unstoppabledomains/resolution/build/Resolution.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Resolution = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar Zns_1 = __importDefault(require(\"./Zns\"));\nvar Uns_1 = __importDefault(require(\"./Uns\"));\nvar UdApi_1 = __importDefault(require(\"./UdApi\"));\nvar publicTypes_1 = require(\"./types/publicTypes\");\nvar resolutionError_1 = __importStar(require(\"./errors/resolutionError\"));\nvar DnsUtils_1 = __importDefault(require(\"./utils/DnsUtils\"));\nvar utils_1 = require(\"./utils\");\nvar Eip1993Factories_1 = require(\"./utils/Eip1993Factories\");\nvar Networking_1 = __importDefault(require(\"./utils/Networking\"));\nvar prepareAndValidate_1 = require(\"./utils/prepareAndValidate\");\nvar namehash_1 = require(\"./utils/namehash\");\n/**\n * Blockchain domain Resolution library - Resolution.\n * @example\n * ```\n * import Resolution from '@unstoppabledomains/resolution';\n *\n * let resolution = new Resolution({ blockchain: {\n *        uns: {\n *           url: \"https://eth-mainnet.alchemyapi.io/v2/GmQ8X1FHf-WDEry0BBSn0RgjVhjHkRmS\",\n *           network: \"mainnet\"\n *        }\n *      }\n *   });\n *\n * let domain = \"brad.zil\";\n * resolution.addr(domain, \"eth\").then(addr => console.log(addr));;\n * ```\n */\nvar Resolution = /** @class */ (function () {\n    function Resolution(_a) {\n        var _b;\n        var _c = _a === void 0 ? {} : _a, _d = _c.sourceConfig, sourceConfig = _d === void 0 ? undefined : _d;\n        var uns = isApi(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns)\n            ? new UdApi_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns)\n            : new Uns_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns);\n        var zns = isApi(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns)\n            ? new UdApi_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns)\n            : new Zns_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns);\n        // If both UNS and ZNS use the same UdApi providers, we don't want to call the API twice as it would return same\n        // responses. It should be enough to compare just the URLs, as the network param isn't actually used in the calls.\n        var equalUdApiProviders = uns instanceof UdApi_1.default && zns instanceof UdApi_1.default && uns.url === zns.url;\n        // If a user configures the lib with an API source, we still want to initialise native blockchain services to access\n        // some non-async methods such as namehash, as they are unavailable in the UdApi service.\n        this.serviceMap = (_b = {},\n            _b[publicTypes_1.NamingServiceName.UNS] = {\n                usedServices: [uns],\n                native: isApi(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns) ? new Uns_1.default() : uns,\n            },\n            _b[publicTypes_1.NamingServiceName.ZNS] = {\n                usedServices: equalUdApiProviders ? [uns] : [uns, zns],\n                native: isApi(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns) ? new Zns_1.default() : zns,\n            },\n            _b);\n    }\n    /**\n     * AutoConfigure the blockchain network for UNS\n     * We make a \"net_version\" JSON RPC call to the blockchain either via url or with the help of given provider.\n     * @param sourceConfig - configuration object for uns\n     * @returns configured Resolution object\n     */\n    Resolution.autoNetwork = function (sourceConfig) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolution, uns;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        resolution = new this();\n                        if (!sourceConfig.uns) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Uns_1.default.autoNetwork(sourceConfig.uns)];\n                    case 1:\n                        uns = _a.sent();\n                        resolution.serviceMap[publicTypes_1.NamingServiceName.UNS] = {\n                            usedServices: [uns],\n                            native: uns,\n                        };\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, resolution];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a resolution with configured infura id for uns\n     * @param infura - infura project id\n     * @param networks - an optional object that describes what network to use when connecting UNS default is mainnet\n     */\n    Resolution.infura = function (infura, networks) {\n        var _a, _b, _c, _d;\n        return new this({\n            sourceConfig: {\n                uns: {\n                    locations: {\n                        Layer1: {\n                            url: (0, utils_1.signedLink)(infura, ((_a = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _a === void 0 ? void 0 : _a.locations.Layer1.network) || 'mainnet', 'infura'),\n                            network: ((_b = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _b === void 0 ? void 0 : _b.locations.Layer1.network) || 'mainnet',\n                        },\n                        Layer2: {\n                            url: (0, utils_1.signedLink)(infura, ((_c = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _c === void 0 ? void 0 : _c.locations.Layer2.network) || 'polygon-mainnet', 'infura'),\n                            network: ((_d = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _d === void 0 ? void 0 : _d.locations.Layer2.network) || 'polygon-mainnet',\n                        },\n                    },\n                },\n            },\n        });\n    };\n    /**\n     * Creates a resolution with configured alchemy API keys for uns\n     * @param alchemy - alchemy API keys\n     * @param networks - an optional object that describes what network to use when connecting UNS default is mainnet\n     */\n    Resolution.alchemy = function (alchemy, networks) {\n        var _a, _b, _c, _d;\n        return new this({\n            sourceConfig: {\n                uns: {\n                    locations: {\n                        Layer1: {\n                            url: (0, utils_1.signedLink)(alchemy, ((_a = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _a === void 0 ? void 0 : _a.locations.Layer1.network) || 'mainnet'),\n                            network: ((_b = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _b === void 0 ? void 0 : _b.locations.Layer1.network) || 'mainnet',\n                        },\n                        Layer2: {\n                            url: (0, utils_1.signedLink)(alchemy, ((_c = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _c === void 0 ? void 0 : _c.locations.Layer2.network) || 'polygon-mainnet'),\n                            network: ((_d = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _d === void 0 ? void 0 : _d.locations.Layer2.network) || 'polygon-mainnet',\n                        },\n                    },\n                },\n            },\n        });\n    };\n    /**\n     * Creates a resolution instance with configured provider\n     * @param networks - an object that describes what network to use when connecting UNS or ZNS default is mainnet\n     * @see https://eips.ethereum.org/EIPS/eip-1193\n     */\n    Resolution.fromResolutionProvider = function (networks) {\n        if (networks.uns) {\n            return this.fromEthereumEip1193Provider({\n                uns: networks.uns,\n            });\n        }\n        if (networks.zns) {\n            return this.fromZilliqaProvider(networks.zns.provider, networks);\n        }\n        throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.ServiceProviderError, {\n            providerMessage: 'Must specify network for uns or zns',\n        });\n    };\n    /**\n     * Creates a resolution instance with configured provider\n     * @param networks - an object that describes what network to use when connecting UNS default is mainnet\n     * @see https://eips.ethereum.org/EIPS/eip-1193\n     */\n    Resolution.fromEthereumEip1193Provider = function (networks) {\n        var sourceConfig = {};\n        if (networks.uns) {\n            sourceConfig.uns = {\n                locations: {\n                    Layer1: {\n                        provider: networks.uns.locations.Layer1.provider,\n                        network: networks.uns.locations.Layer1.network || 'mainnet',\n                    },\n                    Layer2: {\n                        provider: networks.uns.locations.Layer2.provider,\n                        network: networks.uns.locations.Layer2.network || 'polygon-mainnet',\n                    },\n                },\n            };\n        }\n        return new this({\n            sourceConfig: sourceConfig,\n        });\n    };\n    /**\n     * Creates a resolution instance with configured provider\n     * @param provider - any provider compatible with EIP-1193\n     * @param networks - an optional object that describes what network to use when connecting ZNS default is mainnet\n     * @see https://eips.ethereum.org/EIPS/eip-1193\n     */\n    Resolution.fromZilliqaProvider = function (provider, networks) {\n        var _a;\n        return new this({\n            sourceConfig: {\n                zns: { provider: provider, network: ((_a = networks === null || networks === void 0 ? void 0 : networks.zns) === null || _a === void 0 ? void 0 : _a.network) || 'mainnet' },\n            },\n        });\n    };\n    /**\n     * Create a resolution instance from web3 0.x version provider\n     * @param networks - Ethereum network configuration with 0.x version provider from web3 ( must implement sendAsync(payload, callback) )\n     * @see https://github.com/ethereum/web3.js/blob/0.20.7/lib/web3/httpprovider.js#L116\n     */\n    Resolution.fromWeb3Version0Provider = function (networks) {\n        return this.fromEthereumEip1193Provider({\n            uns: networks.uns\n                ? {\n                    locations: {\n                        Layer1: {\n                            network: networks.uns.locations.Layer1.network,\n                            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version0Provider(networks.uns.locations.Layer1.provider),\n                        },\n                        Layer2: {\n                            network: networks.uns.locations.Layer2.network,\n                            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version0Provider(networks.uns.locations.Layer2.provider),\n                        },\n                    },\n                }\n                : undefined,\n        });\n    };\n    /**\n     * Create a resolution instance from web3 1.x version provider\n     * @param networks - an optional object with 1.x version provider from web3 ( must implement send(payload, callback) ) that describes what network to use when connecting UNS default is mainnet\n     * @see https://github.com/ethereum/web3.js/blob/1.x/packages/web3-core-helpers/types/index.d.ts#L165\n     * @see https://github.com/ethereum/web3.js/blob/1.x/packages/web3-providers-http/src/index.js#L95\n     */\n    Resolution.fromWeb3Version1Provider = function (networks) {\n        return this.fromEthereumEip1193Provider({\n            uns: networks.uns\n                ? {\n                    locations: {\n                        Layer1: {\n                            network: networks.uns.locations.Layer1.network,\n                            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version1Provider(networks.uns.locations.Layer1.provider),\n                        },\n                        Layer2: {\n                            network: networks.uns.locations.Layer2.network,\n                            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version1Provider(networks.uns.locations.Layer2.provider),\n                        },\n                    },\n                }\n                : undefined,\n        });\n    };\n    /**\n     * Creates instance of resolution from provider that implements Ethers Provider#call interface.\n     * This wrapper support only `eth_call` method for now, which is enough for all the current Resolution functionality\n     * @param networks - an object that describes what network to use when connecting UNS default is mainnet\n     * @see https://github.com/ethers-io/ethers.js/blob/v4-legacy/providers/abstract-provider.d.ts#L91\n     * @see https://github.com/ethers-io/ethers.js/blob/v5.0.4/packages/abstract-provider/src.ts/index.ts#L224\n     * @see https://docs.ethers.io/ethers.js/v5-beta/api-providers.html#jsonrpcprovider-inherits-from-provider\n     * @see https://github.com/ethers-io/ethers.js/blob/master/packages/providers/src.ts/json-rpc-provider.ts\n     */\n    Resolution.fromEthersProvider = function (networks) {\n        return this.fromEthereumEip1193Provider({\n            uns: networks.uns\n                ? {\n                    locations: {\n                        Layer1: {\n                            network: networks.uns.locations.Layer1.network,\n                            provider: Eip1993Factories_1.Eip1993Factories.fromEthersProvider(networks.uns.locations.Layer1.provider),\n                        },\n                        Layer2: {\n                            network: networks.uns.locations.Layer2.network,\n                            provider: Eip1993Factories_1.Eip1993Factories.fromEthersProvider(networks.uns.locations.Layer2.provider),\n                        },\n                    },\n                }\n                : undefined,\n        });\n    };\n    /**\n     * Resolves given domain name to a specific currency address if exists\n     * @async\n     * @param domain - domain name to be resolved\n     * @param ticker - currency ticker like BTC, ETH, ZIL\n     * @throws [[ResolutionError]] if address is not found\n     * @returns A promise that resolves in an address\n     */\n    Resolution.prototype.addr = function (domain, ticker) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.record(domain, \"crypto.\".concat(ticker.toUpperCase(), \".address\"))];\n            });\n        });\n    };\n    /**\n     * Read multi-chain currency address if exists\n     * @async\n     * @param domain - domain name to be resolved\n     * @param ticker - currency ticker (USDT, FTM, etc.)\n     * @param chain - chain version, usually means blockchain ( ERC20, BEP2, OMNI, etc. )\n     * @throws [[ResolutionError]] if address is not found\n     * @returns A promise that resolves in an adress\n     */\n    Resolution.prototype.multiChainAddr = function (domain, ticker, chain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var recordKey;\n            return __generator(this, function (_a) {\n                domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n                recordKey = \"crypto.\".concat(ticker.toUpperCase(), \".version.\").concat(chain.toUpperCase(), \".address\");\n                return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n                        return service.record(domain, recordKey);\n                    })];\n            });\n        });\n    };\n    /**\n     * Resolves given domain name to a verified twitter handle\n     * @async\n     * @param domain - domain name to be resolved\n     * @throws [[ResolutionError]] if twitter is not found\n     * @returns A promise that resolves in a verified twitter handle\n     */\n    Resolution.prototype.twitter = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n                return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n                        return service.twitter(domain);\n                    })];\n            });\n        });\n    };\n    /**\n     * Resolve a chat id from the domain record\n     * @param domain - domain name to be resolved\n     * @throws [[ResolutionError]]\n     * @returns A promise that resolves in chatId\n     */\n    Resolution.prototype.chatId = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.record(domain, 'gundb.username.value')];\n            });\n        });\n    };\n    /**\n     * Resolve a gundb public key from the domain record\n     * @param domain - domain name to be resolved\n     * @throws [[ResolutionError]]\n     * @returns a promise that resolves in gundb public key\n     */\n    Resolution.prototype.chatPk = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.record(domain, 'gundb.public_key.value')];\n            });\n        });\n    };\n    /**\n     * Resolves the IPFS hash configured for domain records on ZNS\n     * @param domain - domain name\n     * @throws [[ResolutionError]]\n     */\n    Resolution.prototype.ipfsHash = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n                return [2 /*return*/, this.getPreferableNewRecord(domain, 'dweb.ipfs.hash', 'ipfs.html.value')];\n            });\n        });\n    };\n    /**\n     * Resolves the httpUrl attached to domain\n     * @param domain - domain name\n     */\n    Resolution.prototype.httpUrl = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n                return [2 /*return*/, this.getPreferableNewRecord(domain, 'browser.redirect_url', 'ipfs.redirect_domain.value')];\n            });\n        });\n    };\n    /**\n     * Resolves the ipfs email field from whois configurations\n     * @param domain - domain name\n     * @throws [[ResolutionError]]\n     * @returns A Promise that resolves in an email address configured for this domain whois\n     */\n    Resolution.prototype.email = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.record(domain, 'whois.email.value')];\n            });\n        });\n    };\n    /**\n     * @returns the resolver address for a specific domain\n     * @param domain - domain to look for\n     */\n    Resolution.prototype.resolver = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolver;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n                        return [4 /*yield*/, this.callServiceForDomain(domain, function (service) {\n                                return service.resolver(domain);\n                            })];\n                    case 1:\n                        resolver = _a.sent();\n                        if (!resolver) {\n                            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnspecifiedResolver, {\n                                domain: domain,\n                            });\n                        }\n                        return [2 /*return*/, resolver];\n                }\n            });\n        });\n    };\n    /**\n     * @param domain - domain name\n     * @returns An owner address of the domain\n     */\n    Resolution.prototype.owner = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n                return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n                        return service.owner(domain);\n                    })];\n            });\n        });\n    };\n    /**\n     * @param domain - domain name\n     * @param recordKey - a name of a record to be resolved\n     * @returns A record value promise for a given record name\n     */\n    Resolution.prototype.record = function (domain, recordKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n                return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n                        return service.record(domain, recordKey);\n                    })];\n            });\n        });\n    };\n    /**\n     * @param domain domain name\n     * @param keys Array of record keys to be resolved\n     * @returns A Promise with key-value mapping of domain records\n     */\n    Resolution.prototype.records = function (domain, keys) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n                return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n                        return service.records(domain, keys);\n                    })];\n            });\n        });\n    };\n    /**\n     * @param domain domain name\n     * @returns A Promise of whether or not the domain belongs to a wallet\n     */\n    Resolution.prototype.isRegistered = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n                return [2 /*return*/, this.callServiceForDomainBoolean(domain, function (service) { return service.isRegistered(domain); }, {\n                        throwIfUnsupportedDomain: true,\n                        expectedValue: true,\n                    })];\n            });\n        });\n    };\n    /**\n     * @param domain domain name\n     * @returns A Promise of whether or not the domain is available\n     */\n    Resolution.prototype.isAvailable = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n                return [2 /*return*/, this.callServiceForDomainBoolean(domain, function (service) { return service.isAvailable(domain); }, {\n                        throwIfUnsupportedDomain: true,\n                        expectedValue: false,\n                    })];\n            });\n        });\n    };\n    /**\n     * @returns Produces a namehash from supported naming service in hex format with 0x prefix.\n     * Corresponds to ERC721 token id in case of Ethereum based naming service like UNS.\n     * @param domain domain name to be converted\n     * @param namingService \"UNS\" or \"ZNS\" (uses keccak256 or sha256 algorithm respectively)\n     * @param options formatting options\n     * @throws [[ResolutionError]] with UnsupportedDomain error code if domain extension is unknown\n     */\n    Resolution.prototype.namehash = function (domain, namingService, options) {\n        if (options === void 0) { options = publicTypes_1.NamehashOptionsDefault; }\n        var service = this.serviceMap[namingService];\n        if (!service) {\n            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedService, {\n                namingService: namingService,\n            });\n        }\n        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n        return this.formatNamehash(service.native.namehash(domain), options);\n    };\n    /**\n     * @returns a namehash of a subdomain with name label\n     * @param parent namehash of a parent domain\n     * @param label subdomain name\n     * @param namingService \"UNS\" or \"ZNS\" (uses keccak256 or sha256 algorithm respectively)\n     * @param options formatting options\n     */\n    Resolution.prototype.childhash = function (parent, label, namingService, options) {\n        if (options === void 0) { options = publicTypes_1.NamehashOptionsDefault; }\n        var service = this.serviceMap[namingService];\n        if (!service) {\n            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedService, {\n                namingService: namingService,\n            });\n        }\n        return this.formatNamehash(service.native.childhash(parent, label), options);\n    };\n    Resolution.prototype.formatNamehash = function (hash, options) {\n        hash = hash.replace('0x', '');\n        if (options.format === 'dec') {\n            return new bn_js_1.default(hash, 'hex').toString(10);\n        }\n        else {\n            return options.prefix ? '0x' + hash : hash;\n        }\n    };\n    /**\n     * Checks weather the domain name matches the hash\n     * @param domain - domain name to check against\n     * @param hash - hash obtained from the blockchain\n     * @param namingService - \"UNS\" or \"ZNS\" (uses keccak256 or sha256 algorithm respectively)\n     */\n    Resolution.prototype.isValidHash = function (domain, hash, namingService) {\n        var service = this.serviceMap[namingService];\n        if (!service) {\n            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedService, {\n                namingService: namingService,\n            });\n        }\n        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n        return service.native.namehash(domain) === hash;\n    };\n    /**\n     * Checks if the domain name is valid according to naming service rules\n     * for valid domain names.\n     * @param domain - domain name to be checked\n     */\n    Resolution.prototype.isSupportedDomain = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n                return [2 /*return*/, this.callServiceForDomainBoolean(domain, function (service) { return service.isSupportedDomain(domain); }, {\n                        throwIfUnsupportedDomain: false,\n                        expectedValue: true,\n                    })];\n            });\n        });\n    };\n    /**\n     * Returns all record keys of the domain.\n     * This method is strongly unrecommended for production use due to lack of support for many ethereum service providers and low performance\n     * @param domain - domain name\n     */\n    Resolution.prototype.allRecords = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n                return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n                        return service.allRecords(domain);\n                    })];\n            });\n        });\n    };\n    Resolution.prototype.allNonEmptyRecords = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var records, nonEmptyRecords, _i, _a, _b, key, value;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.allRecords(domain)];\n                    case 1:\n                        records = _c.sent();\n                        nonEmptyRecords = {};\n                        for (_i = 0, _a = Object.entries(records); _i < _a.length; _i++) {\n                            _b = _a[_i], key = _b[0], value = _b[1];\n                            if (value) {\n                                nonEmptyRecords[key] = value;\n                            }\n                        }\n                        return [2 /*return*/, nonEmptyRecords];\n                }\n            });\n        });\n    };\n    Resolution.prototype.dns = function (domain, types) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dnsUtils, dnsRecordKeys, blockchainData;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        dnsUtils = new DnsUtils_1.default();\n                        domain = (0, prepareAndValidate_1.prepareAndValidateDomain)(domain);\n                        dnsRecordKeys = this.getDnsRecordKeys(types);\n                        return [4 /*yield*/, this.callServiceForDomain(domain, function (service) {\n                                return service.records(domain, dnsRecordKeys);\n                            })];\n                    case 1:\n                        blockchainData = _a.sent();\n                        return [2 /*return*/, dnsUtils.toList(blockchainData)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the tokenURI from the registry smart contract.\n     * @returns the ERC721Metadata#tokenURI contract method result\n     * @param domain - domain name\n     */\n    Resolution.prototype.tokenURI = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namehash;\n            return __generator(this, function (_a) {\n                namehash = this.namehash(domain, publicTypes_1.NamingServiceName.UNS);\n                return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n                        return service.getTokenUri(namehash);\n                    })];\n            });\n        });\n    };\n    /**\n     * Retrieves the data from the endpoint provided by tokenURI from the registry smart contract.\n     * @returns the JSON response of the token URI endpoint\n     * @param domain - domain name\n     */\n    Resolution.prototype.tokenURIMetadata = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tokenUri;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.tokenURI(domain)];\n                    case 1:\n                        tokenUri = _a.sent();\n                        return [2 /*return*/, this.getMetadataFromTokenURI(tokenUri)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves address of registry contract used for domain\n     * @param domain - domain name\n     * @returns Registry contract address\n     */\n    Resolution.prototype.registryAddress = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.callServiceForDomain(domain, function (service) {\n                        return service.registryAddress(domain);\n                    })];\n            });\n        });\n    };\n    /**\n     * Retrieves the domain name from tokenId by parsing registry smart contract event logs.\n     * @throws {ResolutionError} if returned domain name doesn't match the original namhash.\n     * @returns the domain name retrieved from token metadata\n     * @param hash - domain hash\n     * @param service - nameservice which is used for lookup\n     */\n    Resolution.prototype.unhash = function (hash, service) {\n        return __awaiter(this, void 0, void 0, function () {\n            var services, method;\n            return __generator(this, function (_a) {\n                hash = (0, namehash_1.fromDecStringToHex)(hash);\n                services = this.serviceMap[service].usedServices;\n                method = services[services.length - 1];\n                return [2 /*return*/, method.getDomainFromTokenId(hash)];\n            });\n        });\n    };\n    /**\n     * Retrieves address of registry contract used for domain\n     * @param domains - domain name\n     * @returns Promise<Locations> - A map of domain name and Location (a set of attributes like blockchain,\n     */\n    Resolution.prototype.locations = function (domains) {\n        return __awaiter(this, void 0, void 0, function () {\n            var zilDomains, unsPromise, znsServices, znsService, znsPromise, unsLocations, emptyZilEntries, znsLocations, _i, emptyZilEntries_1, domain;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        zilDomains = domains.filter(function (domain) { return domain.endsWith('.zil'); });\n                        unsPromise = this.serviceMap.UNS.usedServices[0].locations(domains);\n                        if (!zilDomains.length) {\n                            return [2 /*return*/, unsPromise];\n                        }\n                        znsServices = this.serviceMap.ZNS.usedServices;\n                        znsService = znsServices[znsServices.length - 1];\n                        znsPromise = (0, utils_1.wrapResult)(function () { return znsService.locations(zilDomains); });\n                        return [4 /*yield*/, unsPromise];\n                    case 1:\n                        unsLocations = _a.sent();\n                        emptyZilEntries = Object.entries(unsLocations).filter(function (_a) {\n                            var domain = _a[0], location = _a[1];\n                            return domain.endsWith('.zil') && !location;\n                        });\n                        if (!emptyZilEntries.length) {\n                            return [2 /*return*/, unsLocations];\n                        }\n                        return [4 /*yield*/, znsPromise.then(utils_1.unwrapResult)];\n                    case 2:\n                        znsLocations = _a.sent();\n                        for (_i = 0, emptyZilEntries_1 = emptyZilEntries; _i < emptyZilEntries_1.length; _i++) {\n                            domain = emptyZilEntries_1[_i][0];\n                            unsLocations[domain] = znsLocations[domain];\n                        }\n                        return [2 /*return*/, unsLocations];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the token ID that is the primary resolution of the provided address\n     * @param address - owner's address\n     * @returns Promise<tokenId> - token ID that is the primary resolution of the provided address\n     */\n    Resolution.prototype.reverseTokenId = function (address, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tokenId;\n            return __generator(this, function (_a) {\n                tokenId = this.reverseGetTokenId(address, options === null || options === void 0 ? void 0 : options.location);\n                return [2 /*return*/, tokenId];\n            });\n        });\n    };\n    /**\n     * Returns the domain that is the primary resolution of the provided address\n     * @param address - owner's address\n     * @returns Promise<URL> - domain URL that is the primary resolution of the provided addresss\n     */\n    Resolution.prototype.reverse = function (address, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tokenId;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.reverseGetTokenId(address, options === null || options === void 0 ? void 0 : options.location)];\n                    case 1:\n                        tokenId = _a.sent();\n                        if (tokenId) {\n                            return [2 /*return*/, this.unhash(tokenId, publicTypes_1.NamingServiceName.UNS)];\n                        }\n                        return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    Resolution.prototype.getMetadataFromTokenURI = function (tokenUri) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resp, _a, _b;\n            var _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0: return [4 /*yield*/, Networking_1.default.fetch(tokenUri, {})];\n                    case 1:\n                        resp = _d.sent();\n                        if (resp.ok) {\n                            return [2 /*return*/, resp.json()];\n                        }\n                        _a = resolutionError_1.default.bind;\n                        _b = [void 0, resolutionError_1.ResolutionErrorCode.ServiceProviderError];\n                        _c = {};\n                        return [4 /*yield*/, resp.text()];\n                    case 2: throw new (_a.apply(resolutionError_1.default, _b.concat([(_c.providerMessage = _d.sent(),\n                            _c.method = 'UDAPI',\n                            _c.methodName = 'tokenURIMetadata',\n                            _c)])))();\n                }\n            });\n        });\n    };\n    Resolution.prototype.getDnsRecordKeys = function (types) {\n        var records = ['dns.ttl'];\n        types.forEach(function (type) {\n            records.push(\"dns.\".concat(type));\n            records.push(\"dns.\".concat(type, \".ttl\"));\n        });\n        return records;\n    };\n    Resolution.prototype.getPreferableNewRecord = function (domain, newRecord, oldRecord) {\n        return __awaiter(this, void 0, void 0, function () {\n            var records;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.records(domain, [newRecord, oldRecord])];\n                    case 1:\n                        records = _a.sent();\n                        if (!records[newRecord] && !records[oldRecord]) {\n                            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.RecordNotFound, {\n                                recordName: newRecord,\n                                domain: domain,\n                            });\n                        }\n                        return [2 /*return*/, records[newRecord] || records[oldRecord]];\n                }\n            });\n        });\n    };\n    Resolution.prototype.callServiceForDomain = function (domain, func) {\n        return __awaiter(this, void 0, void 0, function () {\n            var serviceName, servicePromises, _i, servicePromises_1, servicePromise, serviceCallResult;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        serviceName = (0, utils_1.findNamingServiceName)(domain);\n                        if (!serviceName) {\n                            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedDomain, {\n                                domain: domain,\n                            });\n                        }\n                        servicePromises = this.serviceMap[serviceName].usedServices.map(function (service) { return (0, utils_1.wrapResult)(function () { return func(service); }); });\n                        _i = 0, servicePromises_1 = servicePromises;\n                        _a.label = 1;\n                    case 1:\n                        if (!(_i < servicePromises_1.length)) return [3 /*break*/, 4];\n                        servicePromise = servicePromises_1[_i];\n                        return [4 /*yield*/, servicePromise];\n                    case 2:\n                        serviceCallResult = _a.sent();\n                        if (serviceCallResult.error !== null) {\n                            if (!(serviceCallResult.error instanceof resolutionError_1.default &&\n                                serviceCallResult.error.code ===\n                                    resolutionError_1.ResolutionErrorCode.UnregisteredDomain)) {\n                                throw serviceCallResult.error;\n                            }\n                        }\n                        else {\n                            return [2 /*return*/, serviceCallResult.result];\n                        }\n                        _a.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4: throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnregisteredDomain, {\n                        domain: domain,\n                    });\n                }\n            });\n        });\n    };\n    // Expects that a called method never throws the `ResolutionErrorCode.UnregisteredDomain` (it doesn't handle it).\n    Resolution.prototype.callServiceForDomainBoolean = function (domain, func, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var serviceName, servicePromises, _i, servicePromises_2, servicePromise, _a, result, error;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        serviceName = (0, utils_1.findNamingServiceName)(domain);\n                        if (!serviceName) {\n                            if (!options.throwIfUnsupportedDomain) {\n                                return [2 /*return*/, !options.expectedValue];\n                            }\n                            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedDomain, {\n                                domain: domain,\n                            });\n                        }\n                        servicePromises = this.serviceMap[serviceName].usedServices.map(function (service) { return (0, utils_1.wrapResult)(function () { return func(service); }); });\n                        _i = 0, servicePromises_2 = servicePromises;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < servicePromises_2.length)) return [3 /*break*/, 4];\n                        servicePromise = servicePromises_2[_i];\n                        return [4 /*yield*/, servicePromise];\n                    case 2:\n                        _a = _b.sent(), result = _a.result, error = _a.error;\n                        if (error) {\n                            if (!(error instanceof resolutionError_1.default &&\n                                error.code === resolutionError_1.ResolutionErrorCode.UnregisteredDomain)) {\n                                throw error;\n                            }\n                        }\n                        else if (result === options.expectedValue) {\n                            // If the result is not the one which is expected, we don't want to return it immediately.\n                            return [2 /*return*/, result];\n                        }\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/, !options.expectedValue];\n                }\n            });\n        });\n    };\n    Resolution.prototype.reverseGetTokenId = function (address, location) {\n        return __awaiter(this, void 0, void 0, function () {\n            var service, tokenId;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        service = this.serviceMap['UNS'].native;\n                        return [4 /*yield*/, service.reverseOf(address, location)];\n                    case 1:\n                        tokenId = _a.sent();\n                        return [2 /*return*/, tokenId];\n                }\n            });\n        });\n    };\n    return Resolution;\n}());\nexports.Resolution = Resolution;\nexports.default = Resolution;\nfunction isApi(obj) {\n    return obj && obj.api;\n}\n"],"mappings":"AAAA,YAAY;;AAAC;AACb,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,KAAMC,MAAM,CAACC,MAAM,GAAI,UAASC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EAC5F,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5B,IAAIG,IAAI,GAAGP,MAAM,CAACQ,wBAAwB,CAACL,CAAC,EAAEC,CAAC,CAAC;EAChD,IAAI,CAACG,IAAI,KAAK,KAAK,IAAIA,IAAI,GAAG,CAACJ,CAAC,CAACM,UAAU,GAAGF,IAAI,CAACG,QAAQ,IAAIH,IAAI,CAACI,YAAY,CAAC,EAAE;IACjFJ,IAAI,GAAG;MAAEK,UAAU,EAAE,IAAI;MAAEC,GAAG,EAAE,YAAW;QAAE,OAAOV,CAAC,CAACC,CAAC,CAAC;MAAE;IAAE,CAAC;EAC/D;EACAJ,MAAM,CAACc,cAAc,CAACZ,CAAC,EAAEG,EAAE,EAAEE,IAAI,CAAC;AACtC,CAAC,GAAK,UAASL,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EACxB,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5BF,CAAC,CAACG,EAAE,CAAC,GAAGF,CAAC,CAACC,CAAC,CAAC;AAChB,CAAE,CAAC;AACH,IAAIW,kBAAkB,GAAI,IAAI,IAAI,IAAI,CAACA,kBAAkB,KAAMf,MAAM,CAACC,MAAM,GAAI,UAASC,CAAC,EAAEc,CAAC,EAAE;EAC3FhB,MAAM,CAACc,cAAc,CAACZ,CAAC,EAAE,SAAS,EAAE;IAAEU,UAAU,EAAE,IAAI;IAAEK,KAAK,EAAED;EAAE,CAAC,CAAC;AACvE,CAAC,GAAI,UAASd,CAAC,EAAEc,CAAC,EAAE;EAChBd,CAAC,CAAC,SAAS,CAAC,GAAGc,CAAC;AACpB,CAAC,CAAC;AACF,IAAIE,YAAY,GAAI,IAAI,IAAI,IAAI,CAACA,YAAY,IAAK,UAAUC,GAAG,EAAE;EAC7D,IAAIA,GAAG,IAAIA,GAAG,CAACV,UAAU,EAAE,OAAOU,GAAG;EACrC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAID,GAAG,IAAI,IAAI,EAAE,KAAK,IAAIf,CAAC,IAAIe,GAAG,EAAE,IAAIf,CAAC,KAAK,SAAS,IAAIJ,MAAM,CAACqB,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,GAAG,EAAEf,CAAC,CAAC,EAAEL,eAAe,CAACqB,MAAM,EAAED,GAAG,EAAEf,CAAC,CAAC;EACxIW,kBAAkB,CAACK,MAAM,EAAED,GAAG,CAAC;EAC/B,OAAOC,MAAM;AACjB,CAAC;AACD,IAAII,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,SAAS,EAAE;EACrF,SAASC,KAAK,CAACZ,KAAK,EAAE;IAAE,OAAOA,KAAK,YAAYU,CAAC,GAAGV,KAAK,GAAG,IAAIU,CAAC,CAAC,UAAUG,OAAO,EAAE;MAAEA,OAAO,CAACb,KAAK,CAAC;IAAE,CAAC,CAAC;EAAE;EAC3G,OAAO,KAAKU,CAAC,KAAKA,CAAC,GAAGI,OAAO,CAAC,EAAE,UAAUD,OAAO,EAAEE,MAAM,EAAE;IACvD,SAASC,SAAS,CAAChB,KAAK,EAAE;MAAE,IAAI;QAAEiB,IAAI,CAACN,SAAS,CAACO,IAAI,CAAClB,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOmB,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC1F,SAASC,QAAQ,CAACpB,KAAK,EAAE;MAAE,IAAI;QAAEiB,IAAI,CAACN,SAAS,CAAC,OAAO,CAAC,CAACX,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOmB,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC7F,SAASF,IAAI,CAACd,MAAM,EAAE;MAAEA,MAAM,CAACkB,IAAI,GAAGR,OAAO,CAACV,MAAM,CAACH,KAAK,CAAC,GAAGY,KAAK,CAACT,MAAM,CAACH,KAAK,CAAC,CAACsB,IAAI,CAACN,SAAS,EAAEI,QAAQ,CAAC;IAAE;IAC7GH,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAACY,KAAK,CAACf,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC,EAAES,IAAI,EAAE,CAAC;EACzE,CAAC,CAAC;AACN,CAAC;AACD,IAAIM,WAAW,GAAI,IAAI,IAAI,IAAI,CAACA,WAAW,IAAK,UAAUhB,OAAO,EAAEiB,IAAI,EAAE;EACrE,IAAIC,CAAC,GAAG;MAAEC,KAAK,EAAE,CAAC;MAAEC,IAAI,EAAE,YAAW;QAAE,IAAIC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAMA,CAAC,CAAC,CAAC,CAAC;QAAE,OAAOA,CAAC,CAAC,CAAC,CAAC;MAAE,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAG,CAAC;IAAEC,CAAC;IAAEC,CAAC;IAAEJ,CAAC;IAAEK,CAAC;EAChH,OAAOA,CAAC,GAAG;IAAEhB,IAAI,EAAEiB,IAAI,CAAC,CAAC,CAAC;IAAE,OAAO,EAAEA,IAAI,CAAC,CAAC,CAAC;IAAE,QAAQ,EAAEA,IAAI,CAAC,CAAC;EAAE,CAAC,EAAE,OAAOC,MAAM,KAAK,UAAU,KAAKF,CAAC,CAACE,MAAM,CAACC,QAAQ,CAAC,GAAG,YAAW;IAAE,OAAO,IAAI;EAAE,CAAC,CAAC,EAAEH,CAAC;EACxJ,SAASC,IAAI,CAACG,CAAC,EAAE;IAAE,OAAO,UAAUvC,CAAC,EAAE;MAAE,OAAOkB,IAAI,CAAC,CAACqB,CAAC,EAAEvC,CAAC,CAAC,CAAC;IAAE,CAAC;EAAE;EACjE,SAASkB,IAAI,CAACsB,EAAE,EAAE;IACd,IAAIP,CAAC,EAAE,MAAM,IAAIQ,SAAS,CAAC,iCAAiC,CAAC;IAC7D,OAAOd,CAAC,EAAE,IAAI;MACV,IAAIM,CAAC,GAAG,CAAC,EAAEC,CAAC,KAAKJ,CAAC,GAAGU,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGN,CAAC,CAAC,QAAQ,CAAC,GAAGM,EAAE,CAAC,CAAC,CAAC,GAAGN,CAAC,CAAC,OAAO,CAAC,KAAK,CAACJ,CAAC,GAAGI,CAAC,CAAC,QAAQ,CAAC,KAAKJ,CAAC,CAACvB,IAAI,CAAC2B,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGA,CAAC,CAACf,IAAI,CAAC,IAAI,CAAC,CAACW,CAAC,GAAGA,CAAC,CAACvB,IAAI,CAAC2B,CAAC,EAAEM,EAAE,CAAC,CAAC,CAAC,CAAC,EAAElB,IAAI,EAAE,OAAOQ,CAAC;MAC5J,IAAII,CAAC,GAAG,CAAC,EAAEJ,CAAC,EAAEU,EAAE,GAAG,CAACA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAEV,CAAC,CAAC7B,KAAK,CAAC;MACvC,QAAQuC,EAAE,CAAC,CAAC,CAAC;QACT,KAAK,CAAC;QAAE,KAAK,CAAC;UAAEV,CAAC,GAAGU,EAAE;UAAE;QACxB,KAAK,CAAC;UAAEb,CAAC,CAACC,KAAK,EAAE;UAAE,OAAO;YAAE3B,KAAK,EAAEuC,EAAE,CAAC,CAAC,CAAC;YAAElB,IAAI,EAAE;UAAM,CAAC;QACvD,KAAK,CAAC;UAAEK,CAAC,CAACC,KAAK,EAAE;UAAEM,CAAC,GAAGM,EAAE,CAAC,CAAC,CAAC;UAAEA,EAAE,GAAG,CAAC,CAAC,CAAC;UAAE;QACxC,KAAK,CAAC;UAAEA,EAAE,GAAGb,CAAC,CAACK,GAAG,CAACU,GAAG,EAAE;UAAEf,CAAC,CAACI,IAAI,CAACW,GAAG,EAAE;UAAE;QACxC;UACI,IAAI,EAAEZ,CAAC,GAAGH,CAAC,CAACI,IAAI,EAAED,CAAC,GAAGA,CAAC,CAACa,MAAM,GAAG,CAAC,IAAIb,CAAC,CAACA,CAAC,CAACa,MAAM,GAAG,CAAC,CAAC,CAAC,KAAKH,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIA,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;YAAEb,CAAC,GAAG,CAAC;YAAE;UAAU;UAC3G,IAAIa,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAACV,CAAC,IAAKU,EAAE,CAAC,CAAC,CAAC,GAAGV,CAAC,CAAC,CAAC,CAAC,IAAIU,EAAE,CAAC,CAAC,CAAC,GAAGV,CAAC,CAAC,CAAC,CAAE,CAAC,EAAE;YAAEH,CAAC,CAACC,KAAK,GAAGY,EAAE,CAAC,CAAC,CAAC;YAAE;UAAO;UACrF,IAAIA,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIb,CAAC,CAACC,KAAK,GAAGE,CAAC,CAAC,CAAC,CAAC,EAAE;YAAEH,CAAC,CAACC,KAAK,GAAGE,CAAC,CAAC,CAAC,CAAC;YAAEA,CAAC,GAAGU,EAAE;YAAE;UAAO;UACpE,IAAIV,CAAC,IAAIH,CAAC,CAACC,KAAK,GAAGE,CAAC,CAAC,CAAC,CAAC,EAAE;YAAEH,CAAC,CAACC,KAAK,GAAGE,CAAC,CAAC,CAAC,CAAC;YAAEH,CAAC,CAACK,GAAG,CAACY,IAAI,CAACJ,EAAE,CAAC;YAAE;UAAO;UAClE,IAAIV,CAAC,CAAC,CAAC,CAAC,EAAEH,CAAC,CAACK,GAAG,CAACU,GAAG,EAAE;UACrBf,CAAC,CAACI,IAAI,CAACW,GAAG,EAAE;UAAE;MAAS;MAE/BF,EAAE,GAAGd,IAAI,CAACnB,IAAI,CAACE,OAAO,EAAEkB,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOP,CAAC,EAAE;MAAEoB,EAAE,GAAG,CAAC,CAAC,EAAEpB,CAAC,CAAC;MAAEc,CAAC,GAAG,CAAC;IAAE,CAAC,SAAS;MAAED,CAAC,GAAGH,CAAC,GAAG,CAAC;IAAE;IACzD,IAAIU,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAMA,EAAE,CAAC,CAAC,CAAC;IAAE,OAAO;MAAEvC,KAAK,EAAEuC,EAAE,CAAC,CAAC,CAAC,GAAGA,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;MAAElB,IAAI,EAAE;IAAK,CAAC;EACpF;AACJ,CAAC;AACD,IAAIuB,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAU1C,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACV,UAAU,GAAIU,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDnB,MAAM,CAACc,cAAc,CAACgD,OAAO,EAAE,YAAY,EAAE;EAAE7C,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D6C,OAAO,CAACC,UAAU,GAAG,KAAK,CAAC;AAC3B,IAAIC,OAAO,GAAGH,eAAe,CAACI,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/C,IAAIC,KAAK,GAAGL,eAAe,CAACI,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7C,IAAIE,KAAK,GAAGN,eAAe,CAACI,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7C,IAAIG,OAAO,GAAGP,eAAe,CAACI,OAAO,CAAC,SAAS,CAAC,CAAC;AACjD,IAAII,aAAa,GAAGJ,OAAO,CAAC,qBAAqB,CAAC;AAClD,IAAIK,iBAAiB,GAAGpD,YAAY,CAAC+C,OAAO,CAAC,0BAA0B,CAAC,CAAC;AACzE,IAAIM,UAAU,GAAGV,eAAe,CAACI,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC7D,IAAIO,OAAO,GAAGP,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIQ,kBAAkB,GAAGR,OAAO,CAAC,0BAA0B,CAAC;AAC5D,IAAIS,YAAY,GAAGb,eAAe,CAACI,OAAO,CAAC,oBAAoB,CAAC,CAAC;AACjE,IAAIU,oBAAoB,GAAGV,OAAO,CAAC,4BAA4B,CAAC;AAChE,IAAIW,UAAU,GAAGX,OAAO,CAAC,kBAAkB,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIF,UAAU,GAAG,aAAe,YAAY;EACxC,SAASA,UAAU,CAACc,EAAE,EAAE;IACpB,IAAIC,EAAE;IACN,IAAIC,EAAE,GAAGF,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MAAEG,EAAE,GAAGD,EAAE,CAACE,YAAY;MAAEA,YAAY,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG1E,SAAS,GAAG0E,EAAE;IACrG,IAAIE,GAAG,GAAGC,KAAK,CAACF,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACC,GAAG,CAAC,GACvF,IAAId,OAAO,CAACgB,OAAO,CAACH,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACC,GAAG,CAAC,GACjG,IAAIf,KAAK,CAACiB,OAAO,CAACH,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACC,GAAG,CAAC;IACrG,IAAIG,GAAG,GAAGF,KAAK,CAACF,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACI,GAAG,CAAC,GACvF,IAAIjB,OAAO,CAACgB,OAAO,CAACH,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACI,GAAG,CAAC,GACjG,IAAInB,KAAK,CAACkB,OAAO,CAACH,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACI,GAAG,CAAC;IACrG;IACA;IACA,IAAIC,mBAAmB,GAAGJ,GAAG,YAAYd,OAAO,CAACgB,OAAO,IAAIC,GAAG,YAAYjB,OAAO,CAACgB,OAAO,IAAIF,GAAG,CAACK,GAAG,KAAKF,GAAG,CAACE,GAAG;IACjH;IACA;IACA,IAAI,CAACC,UAAU,IAAIV,EAAE,GAAG,CAAC,CAAC,EACtBA,EAAE,CAACT,aAAa,CAACoB,iBAAiB,CAACC,GAAG,CAAC,GAAG;MACtCC,YAAY,EAAE,CAACT,GAAG,CAAC;MACnBU,MAAM,EAAET,KAAK,CAACF,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACC,GAAG,CAAC,GAAG,IAAIf,KAAK,CAACiB,OAAO,EAAE,GAAGF;IACxH,CAAC,EACDJ,EAAE,CAACT,aAAa,CAACoB,iBAAiB,CAACI,GAAG,CAAC,GAAG;MACtCF,YAAY,EAAEL,mBAAmB,GAAG,CAACJ,GAAG,CAAC,GAAG,CAACA,GAAG,EAAEG,GAAG,CAAC;MACtDO,MAAM,EAAET,KAAK,CAACF,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACI,GAAG,CAAC,GAAG,IAAInB,KAAK,CAACkB,OAAO,EAAE,GAAGC;IACxH,CAAC,EACDP,EAAE,CAAC;EACX;EACA;AACJ;AACA;AACA;AACA;AACA;EACIf,UAAU,CAAC+B,WAAW,GAAG,UAAUb,YAAY,EAAE;IAC7C,OAAOzD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIuE,UAAU,EAAEb,GAAG;MACnB,OAAOzC,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjC,KAAK;UACZ,KAAK,CAAC;YACFmD,UAAU,GAAG,IAAI,IAAI,EAAE;YACvB,IAAI,CAACd,YAAY,CAACC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC9C,OAAO,CAAC,CAAC,CAAC,WAAWf,KAAK,CAACiB,OAAO,CAACU,WAAW,CAACb,YAAY,CAACC,GAAG,CAAC,CAAC;UACrE,KAAK,CAAC;YACFA,GAAG,GAAGL,EAAE,CAAChC,IAAI,EAAE;YACfkD,UAAU,CAACP,UAAU,CAACnB,aAAa,CAACoB,iBAAiB,CAACC,GAAG,CAAC,GAAG;cACzDC,YAAY,EAAE,CAACT,GAAG,CAAC;cACnBU,MAAM,EAAEV;YACZ,CAAC;YACDL,EAAE,CAACjC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,YAAYmD,UAAU,CAAC;QAAC;MAElD,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIhC,UAAU,CAACiC,MAAM,GAAG,UAAUA,MAAM,EAAEC,QAAQ,EAAE;IAC5C,IAAIpB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;IAClB,OAAO,IAAI,IAAI,CAAC;MACZC,YAAY,EAAE;QACVC,GAAG,EAAE;UACDgB,SAAS,EAAE;YACPC,MAAM,EAAE;cACJZ,GAAG,EAAE,CAAC,CAAC,EAAEf,OAAO,CAAC4B,UAAU,EAAEJ,MAAM,EAAE,CAAC,CAACnB,EAAE,GAAGoB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACf,GAAG,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACqB,SAAS,CAACC,MAAM,CAACE,OAAO,KAAK,SAAS,EAAE,QAAQ,CAAC;cACvMA,OAAO,EAAE,CAAC,CAACvB,EAAE,GAAGmB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACf,GAAG,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACoB,SAAS,CAACC,MAAM,CAACE,OAAO,KAAK;YAC3J,CAAC;YACDC,MAAM,EAAE;cACJf,GAAG,EAAE,CAAC,CAAC,EAAEf,OAAO,CAAC4B,UAAU,EAAEJ,MAAM,EAAE,CAAC,CAACjB,EAAE,GAAGkB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACf,GAAG,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACmB,SAAS,CAACI,MAAM,CAACD,OAAO,KAAK,iBAAiB,EAAE,QAAQ,CAAC;cAC/MA,OAAO,EAAE,CAAC,CAACrB,EAAE,GAAGiB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACf,GAAG,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACkB,SAAS,CAACI,MAAM,CAACD,OAAO,KAAK;YAC3J;UACJ;QACJ;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACItC,UAAU,CAACwC,OAAO,GAAG,UAAUA,OAAO,EAAEN,QAAQ,EAAE;IAC9C,IAAIpB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;IAClB,OAAO,IAAI,IAAI,CAAC;MACZC,YAAY,EAAE;QACVC,GAAG,EAAE;UACDgB,SAAS,EAAE;YACPC,MAAM,EAAE;cACJZ,GAAG,EAAE,CAAC,CAAC,EAAEf,OAAO,CAAC4B,UAAU,EAAEG,OAAO,EAAE,CAAC,CAAC1B,EAAE,GAAGoB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACf,GAAG,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACqB,SAAS,CAACC,MAAM,CAACE,OAAO,KAAK,SAAS,CAAC;cAC9LA,OAAO,EAAE,CAAC,CAACvB,EAAE,GAAGmB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACf,GAAG,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACoB,SAAS,CAACC,MAAM,CAACE,OAAO,KAAK;YAC3J,CAAC;YACDC,MAAM,EAAE;cACJf,GAAG,EAAE,CAAC,CAAC,EAAEf,OAAO,CAAC4B,UAAU,EAAEG,OAAO,EAAE,CAAC,CAACxB,EAAE,GAAGkB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACf,GAAG,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACmB,SAAS,CAACI,MAAM,CAACD,OAAO,KAAK,iBAAiB,CAAC;cACtMA,OAAO,EAAE,CAAC,CAACrB,EAAE,GAAGiB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACf,GAAG,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACkB,SAAS,CAACI,MAAM,CAACD,OAAO,KAAK;YAC3J;UACJ;QACJ;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACItC,UAAU,CAACyC,sBAAsB,GAAG,UAAUP,QAAQ,EAAE;IACpD,IAAIA,QAAQ,CAACf,GAAG,EAAE;MACd,OAAO,IAAI,CAACuB,2BAA2B,CAAC;QACpCvB,GAAG,EAAEe,QAAQ,CAACf;MAClB,CAAC,CAAC;IACN;IACA,IAAIe,QAAQ,CAACZ,GAAG,EAAE;MACd,OAAO,IAAI,CAACqB,mBAAmB,CAACT,QAAQ,CAACZ,GAAG,CAACsB,QAAQ,EAAEV,QAAQ,CAAC;IACpE;IACA,MAAM,IAAI3B,iBAAiB,CAACc,OAAO,CAACd,iBAAiB,CAACsC,mBAAmB,CAACC,oBAAoB,EAAE;MAC5FC,eAAe,EAAE;IACrB,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI/C,UAAU,CAAC0C,2BAA2B,GAAG,UAAUR,QAAQ,EAAE;IACzD,IAAIhB,YAAY,GAAG,CAAC,CAAC;IACrB,IAAIgB,QAAQ,CAACf,GAAG,EAAE;MACdD,YAAY,CAACC,GAAG,GAAG;QACfgB,SAAS,EAAE;UACPC,MAAM,EAAE;YACJQ,QAAQ,EAAEV,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACC,MAAM,CAACQ,QAAQ;YAChDN,OAAO,EAAEJ,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACC,MAAM,CAACE,OAAO,IAAI;UACtD,CAAC;UACDC,MAAM,EAAE;YACJK,QAAQ,EAAEV,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACI,MAAM,CAACK,QAAQ;YAChDN,OAAO,EAAEJ,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACI,MAAM,CAACD,OAAO,IAAI;UACtD;QACJ;MACJ,CAAC;IACL;IACA,OAAO,IAAI,IAAI,CAAC;MACZpB,YAAY,EAAEA;IAClB,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIlB,UAAU,CAAC2C,mBAAmB,GAAG,UAAUC,QAAQ,EAAEV,QAAQ,EAAE;IAC3D,IAAIpB,EAAE;IACN,OAAO,IAAI,IAAI,CAAC;MACZI,YAAY,EAAE;QACVI,GAAG,EAAE;UAAEsB,QAAQ,EAAEA,QAAQ;UAAEN,OAAO,EAAE,CAAC,CAACxB,EAAE,GAAGoB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACZ,GAAG,MAAM,IAAI,IAAIR,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACwB,OAAO,KAAK;QAAU;MAC/K;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACItC,UAAU,CAACgD,wBAAwB,GAAG,UAAUd,QAAQ,EAAE;IACtD,OAAO,IAAI,CAACQ,2BAA2B,CAAC;MACpCvB,GAAG,EAAEe,QAAQ,CAACf,GAAG,GACX;QACEgB,SAAS,EAAE;UACPC,MAAM,EAAE;YACJE,OAAO,EAAEJ,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACC,MAAM,CAACE,OAAO;YAC9CM,QAAQ,EAAElC,kBAAkB,CAACuC,gBAAgB,CAACD,wBAAwB,CAACd,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACC,MAAM,CAACQ,QAAQ;UACjH,CAAC;UACDL,MAAM,EAAE;YACJD,OAAO,EAAEJ,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACI,MAAM,CAACD,OAAO;YAC9CM,QAAQ,EAAElC,kBAAkB,CAACuC,gBAAgB,CAACD,wBAAwB,CAACd,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACI,MAAM,CAACK,QAAQ;UACjH;QACJ;MACJ,CAAC,GACCrG;IACV,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIyD,UAAU,CAACkD,wBAAwB,GAAG,UAAUhB,QAAQ,EAAE;IACtD,OAAO,IAAI,CAACQ,2BAA2B,CAAC;MACpCvB,GAAG,EAAEe,QAAQ,CAACf,GAAG,GACX;QACEgB,SAAS,EAAE;UACPC,MAAM,EAAE;YACJE,OAAO,EAAEJ,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACC,MAAM,CAACE,OAAO;YAC9CM,QAAQ,EAAElC,kBAAkB,CAACuC,gBAAgB,CAACC,wBAAwB,CAAChB,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACC,MAAM,CAACQ,QAAQ;UACjH,CAAC;UACDL,MAAM,EAAE;YACJD,OAAO,EAAEJ,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACI,MAAM,CAACD,OAAO;YAC9CM,QAAQ,EAAElC,kBAAkB,CAACuC,gBAAgB,CAACC,wBAAwB,CAAChB,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACI,MAAM,CAACK,QAAQ;UACjH;QACJ;MACJ,CAAC,GACCrG;IACV,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIyD,UAAU,CAACmD,kBAAkB,GAAG,UAAUjB,QAAQ,EAAE;IAChD,OAAO,IAAI,CAACQ,2BAA2B,CAAC;MACpCvB,GAAG,EAAEe,QAAQ,CAACf,GAAG,GACX;QACEgB,SAAS,EAAE;UACPC,MAAM,EAAE;YACJE,OAAO,EAAEJ,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACC,MAAM,CAACE,OAAO;YAC9CM,QAAQ,EAAElC,kBAAkB,CAACuC,gBAAgB,CAACE,kBAAkB,CAACjB,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACC,MAAM,CAACQ,QAAQ;UAC3G,CAAC;UACDL,MAAM,EAAE;YACJD,OAAO,EAAEJ,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACI,MAAM,CAACD,OAAO;YAC9CM,QAAQ,EAAElC,kBAAkB,CAACuC,gBAAgB,CAACE,kBAAkB,CAACjB,QAAQ,CAACf,GAAG,CAACgB,SAAS,CAACI,MAAM,CAACK,QAAQ;UAC3G;QACJ;MACJ,CAAC,GACCrG;IACV,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIyD,UAAU,CAAC1C,SAAS,CAAC8F,IAAI,GAAG,UAAUC,MAAM,EAAEC,MAAM,EAAE;IAClD,OAAO7F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACyC,MAAM,CAACF,MAAM,EAAE,SAAS,CAACG,MAAM,CAACF,MAAM,CAACG,WAAW,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;MAClG,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIzD,UAAU,CAAC1C,SAAS,CAACoG,cAAc,GAAG,UAAUL,MAAM,EAAEC,MAAM,EAAEK,KAAK,EAAE;IACnE,OAAOlG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAImG,SAAS;MACb,OAAOlF,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnCuC,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;QACnEO,SAAS,GAAG,SAAS,CAACJ,MAAM,CAACF,MAAM,CAACG,WAAW,EAAE,EAAE,WAAW,CAAC,CAACD,MAAM,CAACG,KAAK,CAACF,WAAW,EAAE,EAAE,UAAU,CAAC;QACvG,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACK,oBAAoB,CAACT,MAAM,EAAE,UAAUU,OAAO,EAAE;UACnE,OAAOA,OAAO,CAACR,MAAM,CAACF,MAAM,EAAEO,SAAS,CAAC;QAC5C,CAAC,CAAC,CAAC;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI5D,UAAU,CAAC1C,SAAS,CAAC0G,OAAO,GAAG,UAAUX,MAAM,EAAE;IAC7C,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnCuC,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;QACnE,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACS,oBAAoB,CAACT,MAAM,EAAE,UAAUU,OAAO,EAAE;UACnE,OAAOA,OAAO,CAACC,OAAO,CAACX,MAAM,CAAC;QAClC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIrD,UAAU,CAAC1C,SAAS,CAAC2G,MAAM,GAAG,UAAUZ,MAAM,EAAE;IAC5C,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACyC,MAAM,CAACF,MAAM,EAAE,sBAAsB,CAAC,CAAC;MACtE,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIrD,UAAU,CAAC1C,SAAS,CAAC4G,MAAM,GAAG,UAAUb,MAAM,EAAE;IAC5C,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACyC,MAAM,CAACF,MAAM,EAAE,wBAAwB,CAAC,CAAC;MACxE,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIrD,UAAU,CAAC1C,SAAS,CAAC6G,QAAQ,GAAG,UAAUd,MAAM,EAAE;IAC9C,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnCuC,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;QACnE,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACe,sBAAsB,CAACf,MAAM,EAAE,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;MACnG,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;EACIrD,UAAU,CAAC1C,SAAS,CAAC+G,OAAO,GAAG,UAAUhB,MAAM,EAAE;IAC7C,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnCuC,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;QACnE,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACe,sBAAsB,CAACf,MAAM,EAAE,sBAAsB,EAAE,4BAA4B,CAAC,CAAC;MACpH,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIrD,UAAU,CAAC1C,SAAS,CAACgH,KAAK,GAAG,UAAUjB,MAAM,EAAE;IAC3C,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACyC,MAAM,CAACF,MAAM,EAAE,mBAAmB,CAAC,CAAC;MACnE,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;EACIrD,UAAU,CAAC1C,SAAS,CAACiH,QAAQ,GAAG,UAAUlB,MAAM,EAAE;IAC9C,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAI8G,QAAQ;MACZ,OAAO7F,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjC,KAAK;UACZ,KAAK,CAAC;YACFwE,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;YACnE,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACS,oBAAoB,CAACT,MAAM,EAAE,UAAUU,OAAO,EAAE;cAClE,OAAOA,OAAO,CAACQ,QAAQ,CAAClB,MAAM,CAAC;YACnC,CAAC,CAAC,CAAC;UACX,KAAK,CAAC;YACFkB,QAAQ,GAAGzD,EAAE,CAAChC,IAAI,EAAE;YACpB,IAAI,CAACyF,QAAQ,EAAE;cACX,MAAM,IAAIhE,iBAAiB,CAACc,OAAO,CAACd,iBAAiB,CAACsC,mBAAmB,CAAC2B,mBAAmB,EAAE;gBAC3FnB,MAAM,EAAEA;cACZ,CAAC,CAAC;YACN;YACA,OAAO,CAAC,CAAC,CAAC,YAAYkB,QAAQ,CAAC;QAAC;MAE5C,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;EACIvE,UAAU,CAAC1C,SAAS,CAACmH,KAAK,GAAG,UAAUpB,MAAM,EAAE;IAC3C,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnCuC,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;QACnE,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACS,oBAAoB,CAACT,MAAM,EAAE,UAAUU,OAAO,EAAE;UACnE,OAAOA,OAAO,CAACU,KAAK,CAACpB,MAAM,CAAC;QAChC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIrD,UAAU,CAAC1C,SAAS,CAACiG,MAAM,GAAG,UAAUF,MAAM,EAAEO,SAAS,EAAE;IACvD,OAAOnG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnCuC,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;QACnE,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACS,oBAAoB,CAACT,MAAM,EAAE,UAAUU,OAAO,EAAE;UACnE,OAAOA,OAAO,CAACR,MAAM,CAACF,MAAM,EAAEO,SAAS,CAAC;QAC5C,CAAC,CAAC,CAAC;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI5D,UAAU,CAAC1C,SAAS,CAACoH,OAAO,GAAG,UAAUrB,MAAM,EAAEsB,IAAI,EAAE;IACnD,OAAOlH,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnCuC,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;QACnE,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACS,oBAAoB,CAACT,MAAM,EAAE,UAAUU,OAAO,EAAE;UACnE,OAAOA,OAAO,CAACW,OAAO,CAACrB,MAAM,EAAEsB,IAAI,CAAC;QACxC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;EACI3E,UAAU,CAAC1C,SAAS,CAACsH,YAAY,GAAG,UAAUvB,MAAM,EAAE;IAClD,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnCuC,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;QACnE,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACwB,2BAA2B,CAACxB,MAAM,EAAE,UAAUU,OAAO,EAAE;UAAE,OAAOA,OAAO,CAACa,YAAY,CAACvB,MAAM,CAAC;QAAE,CAAC,EAAE;UACpHyB,wBAAwB,EAAE,IAAI;UAC9BC,aAAa,EAAE;QACnB,CAAC,CAAC,CAAC;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;EACI/E,UAAU,CAAC1C,SAAS,CAAC0H,WAAW,GAAG,UAAU3B,MAAM,EAAE;IACjD,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnCuC,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;QACnE,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACwB,2BAA2B,CAACxB,MAAM,EAAE,UAAUU,OAAO,EAAE;UAAE,OAAOA,OAAO,CAACiB,WAAW,CAAC3B,MAAM,CAAC;QAAE,CAAC,EAAE;UACnHyB,wBAAwB,EAAE,IAAI;UAC9BC,aAAa,EAAE;QACnB,CAAC,CAAC,CAAC;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI/E,UAAU,CAAC1C,SAAS,CAAC2H,QAAQ,GAAG,UAAU5B,MAAM,EAAE6B,aAAa,EAAEC,OAAO,EAAE;IACtE,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;MAAEA,OAAO,GAAG7E,aAAa,CAAC8E,sBAAsB;IAAE;IAC1E,IAAIrB,OAAO,GAAG,IAAI,CAACtC,UAAU,CAACyD,aAAa,CAAC;IAC5C,IAAI,CAACnB,OAAO,EAAE;MACV,MAAM,IAAIxD,iBAAiB,CAACc,OAAO,CAACd,iBAAiB,CAACsC,mBAAmB,CAACwC,kBAAkB,EAAE;QAC1FH,aAAa,EAAEA;MACnB,CAAC,CAAC;IACN;IACA7B,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;IACnE,OAAO,IAAI,CAACiC,cAAc,CAACvB,OAAO,CAAClC,MAAM,CAACoD,QAAQ,CAAC5B,MAAM,CAAC,EAAE8B,OAAO,CAAC;EACxE,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACInF,UAAU,CAAC1C,SAAS,CAACiI,SAAS,GAAG,UAAUC,MAAM,EAAE3G,KAAK,EAAEqG,aAAa,EAAEC,OAAO,EAAE;IAC9E,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;MAAEA,OAAO,GAAG7E,aAAa,CAAC8E,sBAAsB;IAAE;IAC1E,IAAIrB,OAAO,GAAG,IAAI,CAACtC,UAAU,CAACyD,aAAa,CAAC;IAC5C,IAAI,CAACnB,OAAO,EAAE;MACV,MAAM,IAAIxD,iBAAiB,CAACc,OAAO,CAACd,iBAAiB,CAACsC,mBAAmB,CAACwC,kBAAkB,EAAE;QAC1FH,aAAa,EAAEA;MACnB,CAAC,CAAC;IACN;IACA,OAAO,IAAI,CAACI,cAAc,CAACvB,OAAO,CAAClC,MAAM,CAAC0D,SAAS,CAACC,MAAM,EAAE3G,KAAK,CAAC,EAAEsG,OAAO,CAAC;EAChF,CAAC;EACDnF,UAAU,CAAC1C,SAAS,CAACgI,cAAc,GAAG,UAAUG,IAAI,EAAEN,OAAO,EAAE;IAC3DM,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;IAC7B,IAAIP,OAAO,CAACQ,MAAM,KAAK,KAAK,EAAE;MAC1B,OAAO,IAAI1F,OAAO,CAACoB,OAAO,CAACoE,IAAI,EAAE,KAAK,CAAC,CAACG,QAAQ,CAAC,EAAE,CAAC;IACxD,CAAC,MACI;MACD,OAAOT,OAAO,CAACU,MAAM,GAAG,IAAI,GAAGJ,IAAI,GAAGA,IAAI;IAC9C;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIzF,UAAU,CAAC1C,SAAS,CAACwI,WAAW,GAAG,UAAUzC,MAAM,EAAEoC,IAAI,EAAEP,aAAa,EAAE;IACtE,IAAInB,OAAO,GAAG,IAAI,CAACtC,UAAU,CAACyD,aAAa,CAAC;IAC5C,IAAI,CAACnB,OAAO,EAAE;MACV,MAAM,IAAIxD,iBAAiB,CAACc,OAAO,CAACd,iBAAiB,CAACsC,mBAAmB,CAACwC,kBAAkB,EAAE;QAC1FH,aAAa,EAAEA;MACnB,CAAC,CAAC;IACN;IACA7B,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;IACnE,OAAOU,OAAO,CAAClC,MAAM,CAACoD,QAAQ,CAAC5B,MAAM,CAAC,KAAKoC,IAAI;EACnD,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIzF,UAAU,CAAC1C,SAAS,CAACyI,iBAAiB,GAAG,UAAU1C,MAAM,EAAE;IACvD,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnCuC,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;QACnE,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACwB,2BAA2B,CAACxB,MAAM,EAAE,UAAUU,OAAO,EAAE;UAAE,OAAOA,OAAO,CAACgC,iBAAiB,CAAC1C,MAAM,CAAC;QAAE,CAAC,EAAE;UACzHyB,wBAAwB,EAAE,KAAK;UAC/BC,aAAa,EAAE;QACnB,CAAC,CAAC,CAAC;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI/E,UAAU,CAAC1C,SAAS,CAAC0I,UAAU,GAAG,UAAU3C,MAAM,EAAE;IAChD,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnCuC,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;QACnE,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACS,oBAAoB,CAACT,MAAM,EAAE,UAAUU,OAAO,EAAE;UACnE,OAAOA,OAAO,CAACiC,UAAU,CAAC3C,MAAM,CAAC;QACrC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACDrD,UAAU,CAAC1C,SAAS,CAAC2I,kBAAkB,GAAG,UAAU5C,MAAM,EAAE;IACxD,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIiH,OAAO,EAAEwB,eAAe,EAAEC,EAAE,EAAErF,EAAE,EAAEC,EAAE,EAAEqF,GAAG,EAAElJ,KAAK;MACpD,OAAOwB,WAAW,CAAC,IAAI,EAAE,UAAUsC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACnC,KAAK;UACZ,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACmH,UAAU,CAAC3C,MAAM,CAAC,CAAC;UACrD,KAAK,CAAC;YACFqB,OAAO,GAAG1D,EAAE,CAAClC,IAAI,EAAE;YACnBoH,eAAe,GAAG,CAAC,CAAC;YACpB,KAAKC,EAAE,GAAG,CAAC,EAAErF,EAAE,GAAG7E,MAAM,CAACoK,OAAO,CAAC3B,OAAO,CAAC,EAAEyB,EAAE,GAAGrF,EAAE,CAAClB,MAAM,EAAEuG,EAAE,EAAE,EAAE;cAC7DpF,EAAE,GAAGD,EAAE,CAACqF,EAAE,CAAC,EAAEC,GAAG,GAAGrF,EAAE,CAAC,CAAC,CAAC,EAAE7D,KAAK,GAAG6D,EAAE,CAAC,CAAC,CAAC;cACvC,IAAI7D,KAAK,EAAE;gBACPgJ,eAAe,CAACE,GAAG,CAAC,GAAGlJ,KAAK;cAChC;YACJ;YACA,OAAO,CAAC,CAAC,CAAC,YAAYgJ,eAAe,CAAC;QAAC;MAEnD,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACDlG,UAAU,CAAC1C,SAAS,CAACgJ,GAAG,GAAG,UAAUjD,MAAM,EAAEkD,KAAK,EAAE;IAChD,OAAO9I,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAI+I,QAAQ,EAAEC,aAAa,EAAEC,cAAc;MAC3C,OAAOhI,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjC,KAAK;UACZ,KAAK,CAAC;YACF2H,QAAQ,GAAG,IAAIhG,UAAU,CAACa,OAAO,EAAE;YACnCgC,MAAM,GAAG,CAAC,CAAC,EAAEzC,oBAAoB,CAACiD,wBAAwB,EAAER,MAAM,CAAC;YACnEoD,aAAa,GAAG,IAAI,CAACE,gBAAgB,CAACJ,KAAK,CAAC;YAC5C,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACzC,oBAAoB,CAACT,MAAM,EAAE,UAAUU,OAAO,EAAE;cAClE,OAAOA,OAAO,CAACW,OAAO,CAACrB,MAAM,EAAEoD,aAAa,CAAC;YACjD,CAAC,CAAC,CAAC;UACX,KAAK,CAAC;YACFC,cAAc,GAAG5F,EAAE,CAAChC,IAAI,EAAE;YAC1B,OAAO,CAAC,CAAC,CAAC,YAAY0H,QAAQ,CAACI,MAAM,CAACF,cAAc,CAAC,CAAC;QAAC;MAEnE,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI1G,UAAU,CAAC1C,SAAS,CAACuJ,QAAQ,GAAG,UAAUxD,MAAM,EAAE;IAC9C,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIwH,QAAQ;MACZ,OAAOvG,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnCmE,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC5B,MAAM,EAAE/C,aAAa,CAACoB,iBAAiB,CAACC,GAAG,CAAC;QACrE,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACmC,oBAAoB,CAACT,MAAM,EAAE,UAAUU,OAAO,EAAE;UACnE,OAAOA,OAAO,CAAC+C,WAAW,CAAC7B,QAAQ,CAAC;QACxC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIjF,UAAU,CAAC1C,SAAS,CAACyJ,gBAAgB,GAAG,UAAU1D,MAAM,EAAE;IACtD,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIuJ,QAAQ;MACZ,OAAOtI,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjC,KAAK;UACZ,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACgI,QAAQ,CAACxD,MAAM,CAAC,CAAC;UACnD,KAAK,CAAC;YACF2D,QAAQ,GAAGlG,EAAE,CAAChC,IAAI,EAAE;YACpB,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACmI,uBAAuB,CAACD,QAAQ,CAAC,CAAC;QAAC;MAE1E,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIhH,UAAU,CAAC1C,SAAS,CAAC4J,eAAe,GAAG,UAAU7D,MAAM,EAAE;IACrD,OAAO5F,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOiB,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACgD,oBAAoB,CAACT,MAAM,EAAE,UAAUU,OAAO,EAAE;UACnE,OAAOA,OAAO,CAACmD,eAAe,CAAC7D,MAAM,CAAC;QAC1C,CAAC,CAAC,CAAC;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIrD,UAAU,CAAC1C,SAAS,CAAC6J,MAAM,GAAG,UAAU1B,IAAI,EAAE1B,OAAO,EAAE;IACnD,OAAOtG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAI2J,QAAQ,EAAEC,MAAM;MACpB,OAAO3I,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC2E,IAAI,GAAG,CAAC,CAAC,EAAE5E,UAAU,CAACyG,kBAAkB,EAAE7B,IAAI,CAAC;QAC/C2B,QAAQ,GAAG,IAAI,CAAC3F,UAAU,CAACsC,OAAO,CAAC,CAACnC,YAAY;QAChDyF,MAAM,GAAGD,QAAQ,CAACA,QAAQ,CAACxH,MAAM,GAAG,CAAC,CAAC;QACtC,OAAO,CAAC,CAAC,CAAC,YAAYyH,MAAM,CAACE,oBAAoB,CAAC9B,IAAI,CAAC,CAAC;MAC5D,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIzF,UAAU,CAAC1C,SAAS,CAAC6E,SAAS,GAAG,UAAUqF,OAAO,EAAE;IAChD,OAAO/J,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIgK,UAAU,EAAEC,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAEC,UAAU,EAAEC,YAAY,EAAEC,eAAe,EAAEC,YAAY,EAAE7B,EAAE,EAAE8B,iBAAiB,EAAE5E,MAAM;MAC3I,OAAO3E,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjC,KAAK;UACZ,KAAK,CAAC;YACF4I,UAAU,GAAGD,OAAO,CAACU,MAAM,CAAC,UAAU7E,MAAM,EAAE;cAAE,OAAOA,MAAM,CAAC8E,QAAQ,CAAC,MAAM,CAAC;YAAE,CAAC,CAAC;YAClFT,UAAU,GAAG,IAAI,CAACjG,UAAU,CAACE,GAAG,CAACC,YAAY,CAAC,CAAC,CAAC,CAACO,SAAS,CAACqF,OAAO,CAAC;YACnE,IAAI,CAACC,UAAU,CAAC7H,MAAM,EAAE;cACpB,OAAO,CAAC,CAAC,CAAC,YAAY8H,UAAU,CAAC;YACrC;YACAC,WAAW,GAAG,IAAI,CAAClG,UAAU,CAACK,GAAG,CAACF,YAAY;YAC9CgG,UAAU,GAAGD,WAAW,CAACA,WAAW,CAAC/H,MAAM,GAAG,CAAC,CAAC;YAChDiI,UAAU,GAAG,CAAC,CAAC,EAAEpH,OAAO,CAAC2H,UAAU,EAAE,YAAY;cAAE,OAAOR,UAAU,CAACzF,SAAS,CAACsF,UAAU,CAAC;YAAE,CAAC,CAAC;YAC9F,OAAO,CAAC,CAAC,CAAC,WAAWC,UAAU,CAAC;UACpC,KAAK,CAAC;YACFI,YAAY,GAAGhH,EAAE,CAAChC,IAAI,EAAE;YACxBiJ,eAAe,GAAG9L,MAAM,CAACoK,OAAO,CAACyB,YAAY,CAAC,CAACI,MAAM,CAAC,UAAUpH,EAAE,EAAE;cAChE,IAAIuC,MAAM,GAAGvC,EAAE,CAAC,CAAC,CAAC;gBAAEuH,QAAQ,GAAGvH,EAAE,CAAC,CAAC,CAAC;cACpC,OAAOuC,MAAM,CAAC8E,QAAQ,CAAC,MAAM,CAAC,IAAI,CAACE,QAAQ;YAC/C,CAAC,CAAC;YACF,IAAI,CAACN,eAAe,CAACnI,MAAM,EAAE;cACzB,OAAO,CAAC,CAAC,CAAC,YAAYkI,YAAY,CAAC;YACvC;YACA,OAAO,CAAC,CAAC,CAAC,WAAWD,UAAU,CAACrJ,IAAI,CAACiC,OAAO,CAAC6H,YAAY,CAAC,CAAC;UAC/D,KAAK,CAAC;YACFN,YAAY,GAAGlH,EAAE,CAAChC,IAAI,EAAE;YACxB,KAAKqH,EAAE,GAAG,CAAC,EAAE8B,iBAAiB,GAAGF,eAAe,EAAE5B,EAAE,GAAG8B,iBAAiB,CAACrI,MAAM,EAAEuG,EAAE,EAAE,EAAE;cACnF9C,MAAM,GAAG4E,iBAAiB,CAAC9B,EAAE,CAAC,CAAC,CAAC,CAAC;cACjC2B,YAAY,CAACzE,MAAM,CAAC,GAAG2E,YAAY,CAAC3E,MAAM,CAAC;YAC/C;YACA,OAAO,CAAC,CAAC,CAAC,YAAYyE,YAAY,CAAC;QAAC;MAEhD,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI9H,UAAU,CAAC1C,SAAS,CAACiL,cAAc,GAAG,UAAUC,OAAO,EAAErD,OAAO,EAAE;IAC9D,OAAO1H,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIgL,OAAO;MACX,OAAO/J,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC2H,OAAO,GAAG,IAAI,CAACC,iBAAiB,CAACF,OAAO,EAAErD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACkD,QAAQ,CAAC;QAC7G,OAAO,CAAC,CAAC,CAAC,YAAYI,OAAO,CAAC;MAClC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIzI,UAAU,CAAC1C,SAAS,CAACqL,OAAO,GAAG,UAAUH,OAAO,EAAErD,OAAO,EAAE;IACvD,OAAO1H,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIgL,OAAO;MACX,OAAO/J,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjC,KAAK;UACZ,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC6J,iBAAiB,CAACF,OAAO,EAAErD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACkD,QAAQ,CAAC,CAAC;UACjI,KAAK,CAAC;YACFI,OAAO,GAAG3H,EAAE,CAAChC,IAAI,EAAE;YACnB,IAAI2J,OAAO,EAAE;cACT,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACtB,MAAM,CAACsB,OAAO,EAAEnI,aAAa,CAACoB,iBAAiB,CAACC,GAAG,CAAC,CAAC;YACpF;YACA,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC;QAAC;MAExC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD3B,UAAU,CAAC1C,SAAS,CAAC2J,uBAAuB,GAAG,UAAUD,QAAQ,EAAE;IAC/D,OAAOvJ,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAImL,IAAI,EAAE9H,EAAE,EAAEC,EAAE;MAChB,IAAIC,EAAE;MACN,OAAOtC,WAAW,CAAC,IAAI,EAAE,UAAUuC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACpC,KAAK;UACZ,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW8B,YAAY,CAACU,OAAO,CAACwH,KAAK,CAAC7B,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;UACtE,KAAK,CAAC;YACF4B,IAAI,GAAG3H,EAAE,CAACnC,IAAI,EAAE;YAChB,IAAI8J,IAAI,CAACE,EAAE,EAAE;cACT,OAAO,CAAC,CAAC,CAAC,YAAYF,IAAI,CAACG,IAAI,EAAE,CAAC;YACtC;YACAjI,EAAE,GAAGP,iBAAiB,CAACc,OAAO,CAAC2H,IAAI;YACnCjI,EAAE,GAAG,CAAC,KAAK,CAAC,EAAER,iBAAiB,CAACsC,mBAAmB,CAACC,oBAAoB,CAAC;YACzE9B,EAAE,GAAG,CAAC,CAAC;YACP,OAAO,CAAC,CAAC,CAAC,WAAW4H,IAAI,CAACK,IAAI,EAAE,CAAC;UACrC,KAAK,CAAC;YAAE,MAAM,KAAKnI,EAAE,CAACrC,KAAK,CAAC8B,iBAAiB,CAACc,OAAO,EAAEN,EAAE,CAACyC,MAAM,CAAC,EAAExC,EAAE,CAAC+B,eAAe,GAAG9B,EAAE,CAACnC,IAAI,EAAE,EACzFkC,EAAE,CAACqG,MAAM,GAAG,OAAO,EACnBrG,EAAE,CAACkI,UAAU,GAAG,kBAAkB,EAClClI,EAAE,EAAE,CAAC,CAAC,GAAG;QAAC;MAE1B,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACDhB,UAAU,CAAC1C,SAAS,CAACqJ,gBAAgB,GAAG,UAAUJ,KAAK,EAAE;IACrD,IAAI7B,OAAO,GAAG,CAAC,SAAS,CAAC;IACzB6B,KAAK,CAAC4C,OAAO,CAAC,UAAUC,IAAI,EAAE;MAC1B1E,OAAO,CAAC7E,IAAI,CAAC,MAAM,CAAC2D,MAAM,CAAC4F,IAAI,CAAC,CAAC;MACjC1E,OAAO,CAAC7E,IAAI,CAAC,MAAM,CAAC2D,MAAM,CAAC4F,IAAI,EAAE,MAAM,CAAC,CAAC;IAC7C,CAAC,CAAC;IACF,OAAO1E,OAAO;EAClB,CAAC;EACD1E,UAAU,CAAC1C,SAAS,CAAC8G,sBAAsB,GAAG,UAAUf,MAAM,EAAEgG,SAAS,EAAEC,SAAS,EAAE;IAClF,OAAO7L,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIiH,OAAO;MACX,OAAOhG,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjC,KAAK;UACZ,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC6F,OAAO,CAACrB,MAAM,EAAE,CAACgG,SAAS,EAAEC,SAAS,CAAC,CAAC,CAAC;UAC1E,KAAK,CAAC;YACF5E,OAAO,GAAG5D,EAAE,CAAChC,IAAI,EAAE;YACnB,IAAI,CAAC4F,OAAO,CAAC2E,SAAS,CAAC,IAAI,CAAC3E,OAAO,CAAC4E,SAAS,CAAC,EAAE;cAC5C,MAAM,IAAI/I,iBAAiB,CAACc,OAAO,CAACd,iBAAiB,CAACsC,mBAAmB,CAAC0G,cAAc,EAAE;gBACtFC,UAAU,EAAEH,SAAS;gBACrBhG,MAAM,EAAEA;cACZ,CAAC,CAAC;YACN;YACA,OAAO,CAAC,CAAC,CAAC,YAAYqB,OAAO,CAAC2E,SAAS,CAAC,IAAI3E,OAAO,CAAC4E,SAAS,CAAC,CAAC;QAAC;MAE5E,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACDtJ,UAAU,CAAC1C,SAAS,CAACwG,oBAAoB,GAAG,UAAUT,MAAM,EAAEoG,IAAI,EAAE;IAChE,OAAOhM,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIiM,WAAW,EAAEC,eAAe,EAAExD,EAAE,EAAEyD,iBAAiB,EAAEC,cAAc,EAAEC,iBAAiB;MAC1F,OAAOpL,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjC,KAAK;UACZ,KAAK,CAAC;YACF6K,WAAW,GAAG,CAAC,CAAC,EAAEjJ,OAAO,CAACsJ,qBAAqB,EAAE1G,MAAM,CAAC;YACxD,IAAI,CAACqG,WAAW,EAAE;cACd,MAAM,IAAInJ,iBAAiB,CAACc,OAAO,CAACd,iBAAiB,CAACsC,mBAAmB,CAACmH,iBAAiB,EAAE;gBACzF3G,MAAM,EAAEA;cACZ,CAAC,CAAC;YACN;YACAsG,eAAe,GAAG,IAAI,CAAClI,UAAU,CAACiI,WAAW,CAAC,CAAC9H,YAAY,CAACqI,GAAG,CAAC,UAAUlG,OAAO,EAAE;cAAE,OAAO,CAAC,CAAC,EAAEtD,OAAO,CAAC2H,UAAU,EAAE,YAAY;gBAAE,OAAOqB,IAAI,CAAC1F,OAAO,CAAC;cAAE,CAAC,CAAC;YAAE,CAAC,CAAC;YAC9JoC,EAAE,GAAG,CAAC,EAAEyD,iBAAiB,GAAGD,eAAe;YAC3C7I,EAAE,CAACjC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACF,IAAI,EAAEsH,EAAE,GAAGyD,iBAAiB,CAAChK,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC7DiK,cAAc,GAAGD,iBAAiB,CAACzD,EAAE,CAAC;YACtC,OAAO,CAAC,CAAC,CAAC,WAAW0D,cAAc,CAAC;UACxC,KAAK,CAAC;YACFC,iBAAiB,GAAGhJ,EAAE,CAAChC,IAAI,EAAE;YAC7B,IAAIgL,iBAAiB,CAACI,KAAK,KAAK,IAAI,EAAE;cAClC,IAAI,EAAEJ,iBAAiB,CAACI,KAAK,YAAY3J,iBAAiB,CAACc,OAAO,IAC9DyI,iBAAiB,CAACI,KAAK,CAACC,IAAI,KACxB5J,iBAAiB,CAACsC,mBAAmB,CAACuH,kBAAkB,CAAC,EAAE;gBAC/D,MAAMN,iBAAiB,CAACI,KAAK;cACjC;YACJ,CAAC,MACI;cACD,OAAO,CAAC,CAAC,CAAC,YAAYJ,iBAAiB,CAACzM,MAAM,CAAC;YACnD;YACAyD,EAAE,CAACjC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFsH,EAAE,EAAE;YACJ,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;UAC3B,KAAK,CAAC;YAAE,MAAM,IAAI5F,iBAAiB,CAACc,OAAO,CAACd,iBAAiB,CAACsC,mBAAmB,CAACuH,kBAAkB,EAAE;cAClG/G,MAAM,EAAEA;YACZ,CAAC,CAAC;QAAC;MAEX,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;EACArD,UAAU,CAAC1C,SAAS,CAACuH,2BAA2B,GAAG,UAAUxB,MAAM,EAAEoG,IAAI,EAAEtE,OAAO,EAAE;IAChF,OAAO1H,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIiM,WAAW,EAAEC,eAAe,EAAExD,EAAE,EAAEkE,iBAAiB,EAAER,cAAc,EAAE/I,EAAE,EAAEzD,MAAM,EAAE6M,KAAK;MAC1F,OAAOxL,WAAW,CAAC,IAAI,EAAE,UAAUqC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAAClC,KAAK;UACZ,KAAK,CAAC;YACF6K,WAAW,GAAG,CAAC,CAAC,EAAEjJ,OAAO,CAACsJ,qBAAqB,EAAE1G,MAAM,CAAC;YACxD,IAAI,CAACqG,WAAW,EAAE;cACd,IAAI,CAACvE,OAAO,CAACL,wBAAwB,EAAE;gBACnC,OAAO,CAAC,CAAC,CAAC,YAAY,CAACK,OAAO,CAACJ,aAAa,CAAC;cACjD;cACA,MAAM,IAAIxE,iBAAiB,CAACc,OAAO,CAACd,iBAAiB,CAACsC,mBAAmB,CAACmH,iBAAiB,EAAE;gBACzF3G,MAAM,EAAEA;cACZ,CAAC,CAAC;YACN;YACAsG,eAAe,GAAG,IAAI,CAAClI,UAAU,CAACiI,WAAW,CAAC,CAAC9H,YAAY,CAACqI,GAAG,CAAC,UAAUlG,OAAO,EAAE;cAAE,OAAO,CAAC,CAAC,EAAEtD,OAAO,CAAC2H,UAAU,EAAE,YAAY;gBAAE,OAAOqB,IAAI,CAAC1F,OAAO,CAAC;cAAE,CAAC,CAAC;YAAE,CAAC,CAAC;YAC9JoC,EAAE,GAAG,CAAC,EAAEkE,iBAAiB,GAAGV,eAAe;YAC3C5I,EAAE,CAAClC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACF,IAAI,EAAEsH,EAAE,GAAGkE,iBAAiB,CAACzK,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC7DiK,cAAc,GAAGQ,iBAAiB,CAAClE,EAAE,CAAC;YACtC,OAAO,CAAC,CAAC,CAAC,WAAW0D,cAAc,CAAC;UACxC,KAAK,CAAC;YACF/I,EAAE,GAAGC,EAAE,CAACjC,IAAI,EAAE,EAAEzB,MAAM,GAAGyD,EAAE,CAACzD,MAAM,EAAE6M,KAAK,GAAGpJ,EAAE,CAACoJ,KAAK;YACpD,IAAIA,KAAK,EAAE;cACP,IAAI,EAAEA,KAAK,YAAY3J,iBAAiB,CAACc,OAAO,IAC5C6I,KAAK,CAACC,IAAI,KAAK5J,iBAAiB,CAACsC,mBAAmB,CAACuH,kBAAkB,CAAC,EAAE;gBAC1E,MAAMF,KAAK;cACf;YACJ,CAAC,MACI,IAAI7M,MAAM,KAAK8H,OAAO,CAACJ,aAAa,EAAE;cACvC;cACA,OAAO,CAAC,CAAC,CAAC,YAAY1H,MAAM,CAAC;YACjC;YACA0D,EAAE,CAAClC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFsH,EAAE,EAAE;YACJ,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;UAC3B,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,YAAY,CAAChB,OAAO,CAACJ,aAAa,CAAC;QAAC;MAE9D,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD/E,UAAU,CAAC1C,SAAS,CAACoL,iBAAiB,GAAG,UAAUF,OAAO,EAAEH,QAAQ,EAAE;IAClE,OAAO5K,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIsG,OAAO,EAAE0E,OAAO;MACpB,OAAO/J,WAAW,CAAC,IAAI,EAAE,UAAUoC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjC,KAAK;UACZ,KAAK,CAAC;YACFkF,OAAO,GAAG,IAAI,CAACtC,UAAU,CAAC,KAAK,CAAC,CAACI,MAAM;YACvC,OAAO,CAAC,CAAC,CAAC,WAAWkC,OAAO,CAACuG,SAAS,CAAC9B,OAAO,EAAEH,QAAQ,CAAC,CAAC;UAC9D,KAAK,CAAC;YACFI,OAAO,GAAG3H,EAAE,CAAChC,IAAI,EAAE;YACnB,OAAO,CAAC,CAAC,CAAC,YAAY2J,OAAO,CAAC;QAAC;MAE3C,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD,OAAOzI,UAAU;AACrB,CAAC,EAAG;AACJD,OAAO,CAACC,UAAU,GAAGA,UAAU;AAC/BD,OAAO,CAACsB,OAAO,GAAGrB,UAAU;AAC5B,SAASoB,KAAK,CAACmJ,GAAG,EAAE;EAChB,OAAOA,GAAG,IAAIA,GAAG,CAACC,GAAG;AACzB"},"metadata":{},"sourceType":"script","externalDependencies":[]}