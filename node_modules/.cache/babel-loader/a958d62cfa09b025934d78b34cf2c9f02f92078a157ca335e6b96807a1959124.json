{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport drain from 'it-drain';\nimport filter from 'it-filter';\nimport take from 'it-take';\nimport all from 'it-all';\nconst sortAll = (iterable, sorter) => {\n  return async function* () {\n    const values = await all(iterable);\n    yield* values.sort(sorter);\n  }();\n};\nexport class BaseBlockstore {\n  open() {\n    return Promise.reject(new Error('.open is not implemented'));\n  }\n  close() {\n    return Promise.reject(new Error('.close is not implemented'));\n  }\n  put(key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'));\n  }\n  get(key, options) {\n    return Promise.reject(new Error('.get is not implemented'));\n  }\n  has(key, options) {\n    return Promise.reject(new Error('.has is not implemented'));\n  }\n  delete(key, options) {\n    return Promise.reject(new Error('.delete is not implemented'));\n  }\n  async *putMany(source, options = {}) {\n    for await (const {\n      key,\n      value\n    } of source) {\n      await this.put(key, value, options);\n      yield {\n        key,\n        value\n      };\n    }\n  }\n  async *getMany(source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options);\n    }\n  }\n  async *deleteMany(source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options);\n      yield key;\n    }\n  }\n  batch() {\n    let puts = [];\n    let dels = [];\n    return {\n      put(key, value) {\n        puts.push({\n          key,\n          value\n        });\n      },\n      delete(key) {\n        dels.push(key);\n      },\n      commit: async options => {\n        await drain(this.putMany(puts, options));\n        puts = [];\n        await drain(this.deleteMany(dels, options));\n        dels = [];\n      }\n    };\n  }\n  async *_all(q, options) {\n    throw new Error('._all is not implemented');\n  }\n  async *_allKeys(q, options) {\n    throw new Error('._allKeys is not implemented');\n  }\n  query(q, options) {\n    let it = this._all(q, options);\n    if (q.prefix != null) {\n      it = filter(it, e => e.key.toString().startsWith(q.prefix || ''));\n    }\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >= (q.offset || 0));\n    }\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n    return it;\n  }\n  queryKeys(q, options) {\n    let it = this._allKeys(q, options);\n    if (q.prefix != null) {\n      it = filter(it, cid => cid.toString().startsWith(q.prefix || ''));\n    }\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >= q.offset);\n    }\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n    return it;\n  }\n}","map":{"version":3,"names":["drain","filter","take","all","sortAll","iterable","sorter","values","sort","BaseBlockstore","open","Promise","reject","Error","close","put","key","val","options","get","has","delete","putMany","source","value","getMany","deleteMany","batch","puts","dels","push","commit","_all","q","_allKeys","query","it","prefix","e","toString","startsWith","Array","isArray","filters","reduce","f","orders","offset","i","limit","queryKeys","cid"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/blockstore-core/esm/src/base.js"],"sourcesContent":["import drain from 'it-drain';\nimport filter from 'it-filter';\nimport take from 'it-take';\nimport all from 'it-all';\nconst sortAll = (iterable, sorter) => {\n  return async function* () {\n    const values = await all(iterable);\n    yield* values.sort(sorter);\n  }();\n};\nexport class BaseBlockstore {\n  open() {\n    return Promise.reject(new Error('.open is not implemented'));\n  }\n  close() {\n    return Promise.reject(new Error('.close is not implemented'));\n  }\n  put(key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'));\n  }\n  get(key, options) {\n    return Promise.reject(new Error('.get is not implemented'));\n  }\n  has(key, options) {\n    return Promise.reject(new Error('.has is not implemented'));\n  }\n  delete(key, options) {\n    return Promise.reject(new Error('.delete is not implemented'));\n  }\n  async *putMany(source, options = {}) {\n    for await (const {key, value} of source) {\n      await this.put(key, value, options);\n      yield {\n        key,\n        value\n      };\n    }\n  }\n  async *getMany(source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options);\n    }\n  }\n  async *deleteMany(source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options);\n      yield key;\n    }\n  }\n  batch() {\n    let puts = [];\n    let dels = [];\n    return {\n      put(key, value) {\n        puts.push({\n          key,\n          value\n        });\n      },\n      delete(key) {\n        dels.push(key);\n      },\n      commit: async options => {\n        await drain(this.putMany(puts, options));\n        puts = [];\n        await drain(this.deleteMany(dels, options));\n        dels = [];\n      }\n    };\n  }\n  async *_all(q, options) {\n    throw new Error('._all is not implemented');\n  }\n  async *_allKeys(q, options) {\n    throw new Error('._allKeys is not implemented');\n  }\n  query(q, options) {\n    let it = this._all(q, options);\n    if (q.prefix != null) {\n      it = filter(it, e => e.key.toString().startsWith(q.prefix || ''));\n    }\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >= (q.offset || 0));\n    }\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n    return it;\n  }\n  queryKeys(q, options) {\n    let it = this._allKeys(q, options);\n    if (q.prefix != null) {\n      it = filter(it, cid => cid.toString().startsWith(q.prefix || ''));\n    }\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >= q.offset);\n    }\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n    return it;\n  }\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,UAAU;AAC5B,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,GAAG,MAAM,QAAQ;AACxB,MAAMC,OAAO,GAAG,CAACC,QAAQ,EAAEC,MAAM,KAAK;EACpC,OAAO,mBAAmB;IACxB,MAAMC,MAAM,GAAG,MAAMJ,GAAG,CAACE,QAAQ,CAAC;IAClC,OAAOE,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC;EAC5B,CAAC,EAAE;AACL,CAAC;AACD,OAAO,MAAMG,cAAc,CAAC;EAC1BC,IAAI,GAAG;IACL,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,0BAA0B,CAAC,CAAC;EAC9D;EACAC,KAAK,GAAG;IACN,OAAOH,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,2BAA2B,CAAC,CAAC;EAC/D;EACAE,GAAG,CAACC,GAAG,EAAEC,GAAG,EAAEC,OAAO,EAAE;IACrB,OAAOP,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,yBAAyB,CAAC,CAAC;EAC7D;EACAM,GAAG,CAACH,GAAG,EAAEE,OAAO,EAAE;IAChB,OAAOP,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,yBAAyB,CAAC,CAAC;EAC7D;EACAO,GAAG,CAACJ,GAAG,EAAEE,OAAO,EAAE;IAChB,OAAOP,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,yBAAyB,CAAC,CAAC;EAC7D;EACAQ,MAAM,CAACL,GAAG,EAAEE,OAAO,EAAE;IACnB,OAAOP,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,4BAA4B,CAAC,CAAC;EAChE;EACA,OAAOS,OAAO,CAACC,MAAM,EAAEL,OAAO,GAAG,CAAC,CAAC,EAAE;IACnC,WAAW,MAAM;MAACF,GAAG;MAAEQ;IAAK,CAAC,IAAID,MAAM,EAAE;MACvC,MAAM,IAAI,CAACR,GAAG,CAACC,GAAG,EAAEQ,KAAK,EAAEN,OAAO,CAAC;MACnC,MAAM;QACJF,GAAG;QACHQ;MACF,CAAC;IACH;EACF;EACA,OAAOC,OAAO,CAACF,MAAM,EAAEL,OAAO,GAAG,CAAC,CAAC,EAAE;IACnC,WAAW,MAAMF,GAAG,IAAIO,MAAM,EAAE;MAC9B,MAAM,IAAI,CAACJ,GAAG,CAACH,GAAG,EAAEE,OAAO,CAAC;IAC9B;EACF;EACA,OAAOQ,UAAU,CAACH,MAAM,EAAEL,OAAO,GAAG,CAAC,CAAC,EAAE;IACtC,WAAW,MAAMF,GAAG,IAAIO,MAAM,EAAE;MAC9B,MAAM,IAAI,CAACF,MAAM,CAACL,GAAG,EAAEE,OAAO,CAAC;MAC/B,MAAMF,GAAG;IACX;EACF;EACAW,KAAK,GAAG;IACN,IAAIC,IAAI,GAAG,EAAE;IACb,IAAIC,IAAI,GAAG,EAAE;IACb,OAAO;MACLd,GAAG,CAACC,GAAG,EAAEQ,KAAK,EAAE;QACdI,IAAI,CAACE,IAAI,CAAC;UACRd,GAAG;UACHQ;QACF,CAAC,CAAC;MACJ,CAAC;MACDH,MAAM,CAACL,GAAG,EAAE;QACVa,IAAI,CAACC,IAAI,CAACd,GAAG,CAAC;MAChB,CAAC;MACDe,MAAM,EAAE,MAAMb,OAAO,IAAI;QACvB,MAAMlB,KAAK,CAAC,IAAI,CAACsB,OAAO,CAACM,IAAI,EAAEV,OAAO,CAAC,CAAC;QACxCU,IAAI,GAAG,EAAE;QACT,MAAM5B,KAAK,CAAC,IAAI,CAAC0B,UAAU,CAACG,IAAI,EAAEX,OAAO,CAAC,CAAC;QAC3CW,IAAI,GAAG,EAAE;MACX;IACF,CAAC;EACH;EACA,OAAOG,IAAI,CAACC,CAAC,EAAEf,OAAO,EAAE;IACtB,MAAM,IAAIL,KAAK,CAAC,0BAA0B,CAAC;EAC7C;EACA,OAAOqB,QAAQ,CAACD,CAAC,EAAEf,OAAO,EAAE;IAC1B,MAAM,IAAIL,KAAK,CAAC,8BAA8B,CAAC;EACjD;EACAsB,KAAK,CAACF,CAAC,EAAEf,OAAO,EAAE;IAChB,IAAIkB,EAAE,GAAG,IAAI,CAACJ,IAAI,CAACC,CAAC,EAAEf,OAAO,CAAC;IAC9B,IAAIe,CAAC,CAACI,MAAM,IAAI,IAAI,EAAE;MACpBD,EAAE,GAAGnC,MAAM,CAACmC,EAAE,EAAEE,CAAC,IAAIA,CAAC,CAACtB,GAAG,CAACuB,QAAQ,EAAE,CAACC,UAAU,CAACP,CAAC,CAACI,MAAM,IAAI,EAAE,CAAC,CAAC;IACnE;IACA,IAAII,KAAK,CAACC,OAAO,CAACT,CAAC,CAACU,OAAO,CAAC,EAAE;MAC5BP,EAAE,GAAGH,CAAC,CAACU,OAAO,CAACC,MAAM,CAAC,CAACR,EAAE,EAAES,CAAC,KAAK5C,MAAM,CAACmC,EAAE,EAAES,CAAC,CAAC,EAAET,EAAE,CAAC;IACrD;IACA,IAAIK,KAAK,CAACC,OAAO,CAACT,CAAC,CAACa,MAAM,CAAC,EAAE;MAC3BV,EAAE,GAAGH,CAAC,CAACa,MAAM,CAACF,MAAM,CAAC,CAACR,EAAE,EAAES,CAAC,KAAKzC,OAAO,CAACgC,EAAE,EAAES,CAAC,CAAC,EAAET,EAAE,CAAC;IACrD;IACA,IAAIH,CAAC,CAACc,MAAM,IAAI,IAAI,EAAE;MACpB,IAAIC,CAAC,GAAG,CAAC;MACTZ,EAAE,GAAGnC,MAAM,CAACmC,EAAE,EAAE,MAAMY,CAAC,EAAE,KAAKf,CAAC,CAACc,MAAM,IAAI,CAAC,CAAC,CAAC;IAC/C;IACA,IAAId,CAAC,CAACgB,KAAK,IAAI,IAAI,EAAE;MACnBb,EAAE,GAAGlC,IAAI,CAACkC,EAAE,EAAEH,CAAC,CAACgB,KAAK,CAAC;IACxB;IACA,OAAOb,EAAE;EACX;EACAc,SAAS,CAACjB,CAAC,EAAEf,OAAO,EAAE;IACpB,IAAIkB,EAAE,GAAG,IAAI,CAACF,QAAQ,CAACD,CAAC,EAAEf,OAAO,CAAC;IAClC,IAAIe,CAAC,CAACI,MAAM,IAAI,IAAI,EAAE;MACpBD,EAAE,GAAGnC,MAAM,CAACmC,EAAE,EAAEe,GAAG,IAAIA,GAAG,CAACZ,QAAQ,EAAE,CAACC,UAAU,CAACP,CAAC,CAACI,MAAM,IAAI,EAAE,CAAC,CAAC;IACnE;IACA,IAAII,KAAK,CAACC,OAAO,CAACT,CAAC,CAACU,OAAO,CAAC,EAAE;MAC5BP,EAAE,GAAGH,CAAC,CAACU,OAAO,CAACC,MAAM,CAAC,CAACR,EAAE,EAAES,CAAC,KAAK5C,MAAM,CAACmC,EAAE,EAAES,CAAC,CAAC,EAAET,EAAE,CAAC;IACrD;IACA,IAAIK,KAAK,CAACC,OAAO,CAACT,CAAC,CAACa,MAAM,CAAC,EAAE;MAC3BV,EAAE,GAAGH,CAAC,CAACa,MAAM,CAACF,MAAM,CAAC,CAACR,EAAE,EAAES,CAAC,KAAKzC,OAAO,CAACgC,EAAE,EAAES,CAAC,CAAC,EAAET,EAAE,CAAC;IACrD;IACA,IAAIH,CAAC,CAACc,MAAM,IAAI,IAAI,EAAE;MACpB,IAAIC,CAAC,GAAG,CAAC;MACTZ,EAAE,GAAGnC,MAAM,CAACmC,EAAE,EAAE,MAAMY,CAAC,EAAE,IAAIf,CAAC,CAACc,MAAM,CAAC;IACxC;IACA,IAAId,CAAC,CAACgB,KAAK,IAAI,IAAI,EAAE;MACnBb,EAAE,GAAGlC,IAAI,CAACkC,EAAE,EAAEH,CAAC,CAACgB,KAAK,CAAC;IACxB;IACA,OAAOb,EAAE;EACX;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}