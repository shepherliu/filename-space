{"ast":null,"code":"import \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { asyncIterableReader, bytesReader, createDecoder } from './decoder.js';\nexport class CarReader {\n  constructor(version, roots, blocks) {\n    this._version = version;\n    this._roots = roots;\n    this._blocks = blocks;\n    this._keys = blocks.map(b => b.cid.toString());\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  async has(key) {\n    return this._keys.indexOf(key.toString()) > -1;\n  }\n  async get(key) {\n    const index = this._keys.indexOf(key.toString());\n    return index > -1 ? this._blocks[index] : undefined;\n  }\n  async *blocks() {\n    for (const block of this._blocks) {\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const block of this._blocks) {\n      yield block.cid;\n    }\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeReaderComplete(bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeReaderComplete(asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeReaderComplete(reader) {\n  const decoder = createDecoder(reader);\n  const {\n    version,\n    roots\n  } = await decoder.header();\n  const blocks = [];\n  for await (const block of decoder.blocks()) {\n    blocks.push(block);\n  }\n  return new CarReader(version, roots, blocks);\n}\nexport const __browser = true;","map":{"version":3,"names":["asyncIterableReader","bytesReader","createDecoder","CarReader","constructor","version","roots","blocks","_version","_roots","_blocks","_keys","map","b","cid","toString","getRoots","has","key","indexOf","get","index","undefined","block","cids","fromBytes","bytes","Uint8Array","TypeError","decodeReaderComplete","fromIterable","asyncIterable","Symbol","asyncIterator","reader","decoder","header","push","__browser"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/@ipld/car/esm/lib/reader-browser.js"],"sourcesContent":["import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarReader {\n  constructor(version, roots, blocks) {\n    this._version = version;\n    this._roots = roots;\n    this._blocks = blocks;\n    this._keys = blocks.map(b => b.cid.toString());\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  async has(key) {\n    return this._keys.indexOf(key.toString()) > -1;\n  }\n  async get(key) {\n    const index = this._keys.indexOf(key.toString());\n    return index > -1 ? this._blocks[index] : undefined;\n  }\n  async *blocks() {\n    for (const block of this._blocks) {\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const block of this._blocks) {\n      yield block.cid;\n    }\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeReaderComplete(bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeReaderComplete(asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeReaderComplete(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  const blocks = [];\n  for await (const block of decoder.blocks()) {\n    blocks.push(block);\n  }\n  return new CarReader(version, roots, blocks);\n}\nexport const __browser = true;"],"mappings":";;;AAAA,SACEA,mBAAmB,EACnBC,WAAW,EACXC,aAAa,QACR,cAAc;AACrB,OAAO,MAAMC,SAAS,CAAC;EACrBC,WAAW,CAACC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAE;IAClC,IAAI,CAACC,QAAQ,GAAGH,OAAO;IACvB,IAAI,CAACI,MAAM,GAAGH,KAAK;IACnB,IAAI,CAACI,OAAO,GAAGH,MAAM;IACrB,IAAI,CAACI,KAAK,GAAGJ,MAAM,CAACK,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,CAACC,QAAQ,EAAE,CAAC;EAChD;EACA,IAAIV,OAAO,GAAG;IACZ,OAAO,IAAI,CAACG,QAAQ;EACtB;EACA,MAAMQ,QAAQ,GAAG;IACf,OAAO,IAAI,CAACP,MAAM;EACpB;EACA,MAAMQ,GAAG,CAACC,GAAG,EAAE;IACb,OAAO,IAAI,CAACP,KAAK,CAACQ,OAAO,CAACD,GAAG,CAACH,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC;EAChD;EACA,MAAMK,GAAG,CAACF,GAAG,EAAE;IACb,MAAMG,KAAK,GAAG,IAAI,CAACV,KAAK,CAACQ,OAAO,CAACD,GAAG,CAACH,QAAQ,EAAE,CAAC;IAChD,OAAOM,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAACX,OAAO,CAACW,KAAK,CAAC,GAAGC,SAAS;EACrD;EACA,OAAOf,MAAM,GAAG;IACd,KAAK,MAAMgB,KAAK,IAAI,IAAI,CAACb,OAAO,EAAE;MAChC,MAAMa,KAAK;IACb;EACF;EACA,OAAOC,IAAI,GAAG;IACZ,KAAK,MAAMD,KAAK,IAAI,IAAI,CAACb,OAAO,EAAE;MAChC,MAAMa,KAAK,CAACT,GAAG;IACjB;EACF;EACA,aAAaW,SAAS,CAACC,KAAK,EAAE;IAC5B,IAAI,EAAEA,KAAK,YAAYC,UAAU,CAAC,EAAE;MAClC,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;IAC1D;IACA,OAAOC,oBAAoB,CAAC5B,WAAW,CAACyB,KAAK,CAAC,CAAC;EACjD;EACA,aAAaI,YAAY,CAACC,aAAa,EAAE;IACvC,IAAI,CAACA,aAAa,IAAI,EAAE,OAAOA,aAAa,CAACC,MAAM,CAACC,aAAa,CAAC,KAAK,UAAU,CAAC,EAAE;MAClF,MAAM,IAAIL,SAAS,CAAC,2CAA2C,CAAC;IAClE;IACA,OAAOC,oBAAoB,CAAC7B,mBAAmB,CAAC+B,aAAa,CAAC,CAAC;EACjE;AACF;AACA,eAAeF,oBAAoB,CAACK,MAAM,EAAE;EAC1C,MAAMC,OAAO,GAAGjC,aAAa,CAACgC,MAAM,CAAC;EACrC,MAAM;IAAC7B,OAAO;IAAEC;EAAK,CAAC,GAAG,MAAM6B,OAAO,CAACC,MAAM,EAAE;EAC/C,MAAM7B,MAAM,GAAG,EAAE;EACjB,WAAW,MAAMgB,KAAK,IAAIY,OAAO,CAAC5B,MAAM,EAAE,EAAE;IAC1CA,MAAM,CAAC8B,IAAI,CAACd,KAAK,CAAC;EACpB;EACA,OAAO,IAAIpB,SAAS,CAACE,OAAO,EAAEC,KAAK,EAAEC,MAAM,CAAC;AAC9C;AACA,OAAO,MAAM+B,SAAS,GAAG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}