{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unwrapResult = exports.wrapResult = exports.EthereumNetworksInverted = exports.EthereumNetworks = exports.findNamingServiceName = exports.domainExtensionToNamingServiceName = exports.constructRecords = exports.isNullAddress = exports.hexToBytes = exports.signedLink = void 0;\nvar publicTypes_1 = require(\"../types/publicTypes\");\nvar types_1 = require(\"../types\");\nvar ProviderURLMap = {\n  infura: {\n    mainnet: 'https://mainnet.infura.io/v3/',\n    rinkeby: 'https://rinkeby.infura.io/v3/',\n    goerli: 'https://goerli.infura.io/v3/',\n    'polygon-mainnet': 'https://polygon-mainnet.infura.io/v3/',\n    'polygon-mumbai': 'https://polygon-mumbai.infura.io/v3/'\n  },\n  alchemy: {\n    mainnet: 'https://eth-mainnet.alchemyapi.io/v2/',\n    rinkeby: 'https://eth-rinkeby.alchemyapi.io/v2/',\n    goerli: 'https://eth-goerli.alchemyapi.io/v2/',\n    'polygon-mainnet': 'https://polygon-mainnet.g.alchemy.com/v2/',\n    'polygon-mumbai': 'https://polygon-mumbai.g.alchemy.com/v2/'\n  }\n};\nfunction signedLink(key, network, provider) {\n  if (network === void 0) {\n    network = 'mainnet';\n  }\n  if (provider === void 0) {\n    provider = 'alchemy';\n  }\n  var url = ProviderURLMap[provider][network];\n  return \"\".concat(url).concat(key);\n}\nexports.signedLink = signedLink;\nfunction hexToBytes(hexString) {\n  var hex = hexString.replace(/^0x/i, '');\n  var bytes = [];\n  for (var c = 0; c < hex.length; c += 2) {\n    bytes.push(parseInt(hex.substr(c, 2), 16));\n  }\n  return bytes;\n}\nexports.hexToBytes = hexToBytes;\nfunction isNullAddress(key) {\n  if (!key) {\n    return true;\n  }\n  return Object.values(types_1.NullAddresses).includes(key);\n}\nexports.isNullAddress = isNullAddress;\nfunction constructRecords(keys, values) {\n  var records = {};\n  keys.forEach(function (key, index) {\n    records[key] = (values instanceof Array ? values[index] : values === null || values === void 0 ? void 0 : values[key]) || '';\n  });\n  return records;\n}\nexports.constructRecords = constructRecords;\nexports.domainExtensionToNamingServiceName = {\n  crypto: publicTypes_1.NamingServiceName.UNS,\n  zil: publicTypes_1.NamingServiceName.ZNS\n};\nvar findNamingServiceName = function (domain) {\n  var extension = domain.split('.').pop();\n  if (!extension) {\n    return '';\n  } else if (extension in exports.domainExtensionToNamingServiceName) {\n    return exports.domainExtensionToNamingServiceName[extension];\n  } else {\n    return exports.domainExtensionToNamingServiceName.crypto;\n  }\n};\nexports.findNamingServiceName = findNamingServiceName;\nexports.EthereumNetworks = {\n  mainnet: 1,\n  ropsten: 3,\n  rinkeby: 4,\n  goerli: 5,\n  'polygon-mainnet': 137,\n  'polygon-mumbai': 80001\n};\nexports.EthereumNetworksInverted = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  137: 'polygon-mainnet',\n  80001: 'polygon-mumbai'\n};\nvar wrapResult = function (func) {\n  var callResult;\n  // Catch immediately in case it's not an async call.\n  try {\n    callResult = func();\n  } catch (error) {\n    return Promise.resolve({\n      result: null,\n      error: error\n    });\n  }\n  // `Promise.resolve` will convert both promise-like objects and plain values to promises.\n  var promise = callResult instanceof Promise ? callResult : Promise.resolve(callResult);\n  // We wrap results and errors to avoid unhandled promise rejections in case we won't `await` every promise\n  // and return earlier.\n  return promise.then(function (result) {\n    return {\n      result: result,\n      error: null\n    };\n  }, function (error) {\n    return {\n      result: null,\n      error: error\n    };\n  });\n};\nexports.wrapResult = wrapResult;\nvar unwrapResult = function (wrappedResult) {\n  if (wrappedResult.error !== null) {\n    throw wrappedResult.error;\n  }\n  return wrappedResult.result;\n};\nexports.unwrapResult = unwrapResult;","map":{"version":3,"names":["Object","defineProperty","exports","value","unwrapResult","wrapResult","EthereumNetworksInverted","EthereumNetworks","findNamingServiceName","domainExtensionToNamingServiceName","constructRecords","isNullAddress","hexToBytes","signedLink","publicTypes_1","require","types_1","ProviderURLMap","infura","mainnet","rinkeby","goerli","alchemy","key","network","provider","url","concat","hexString","hex","replace","bytes","c","length","push","parseInt","substr","values","NullAddresses","includes","keys","records","forEach","index","Array","crypto","NamingServiceName","UNS","zil","ZNS","domain","extension","split","pop","ropsten","func","callResult","error","Promise","resolve","result","promise","then","wrappedResult"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/@unstoppabledomains/resolution/build/utils/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unwrapResult = exports.wrapResult = exports.EthereumNetworksInverted = exports.EthereumNetworks = exports.findNamingServiceName = exports.domainExtensionToNamingServiceName = exports.constructRecords = exports.isNullAddress = exports.hexToBytes = exports.signedLink = void 0;\nvar publicTypes_1 = require(\"../types/publicTypes\");\nvar types_1 = require(\"../types\");\nvar ProviderURLMap = {\n    infura: {\n        mainnet: 'https://mainnet.infura.io/v3/',\n        rinkeby: 'https://rinkeby.infura.io/v3/',\n        goerli: 'https://goerli.infura.io/v3/',\n        'polygon-mainnet': 'https://polygon-mainnet.infura.io/v3/',\n        'polygon-mumbai': 'https://polygon-mumbai.infura.io/v3/',\n    },\n    alchemy: {\n        mainnet: 'https://eth-mainnet.alchemyapi.io/v2/',\n        rinkeby: 'https://eth-rinkeby.alchemyapi.io/v2/',\n        goerli: 'https://eth-goerli.alchemyapi.io/v2/',\n        'polygon-mainnet': 'https://polygon-mainnet.g.alchemy.com/v2/',\n        'polygon-mumbai': 'https://polygon-mumbai.g.alchemy.com/v2/',\n    },\n};\nfunction signedLink(key, network, provider) {\n    if (network === void 0) { network = 'mainnet'; }\n    if (provider === void 0) { provider = 'alchemy'; }\n    var url = ProviderURLMap[provider][network];\n    return \"\".concat(url).concat(key);\n}\nexports.signedLink = signedLink;\nfunction hexToBytes(hexString) {\n    var hex = hexString.replace(/^0x/i, '');\n    var bytes = [];\n    for (var c = 0; c < hex.length; c += 2) {\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    }\n    return bytes;\n}\nexports.hexToBytes = hexToBytes;\nfunction isNullAddress(key) {\n    if (!key) {\n        return true;\n    }\n    return Object.values(types_1.NullAddresses).includes(key);\n}\nexports.isNullAddress = isNullAddress;\nfunction constructRecords(keys, values) {\n    var records = {};\n    keys.forEach(function (key, index) {\n        records[key] =\n            (values instanceof Array ? values[index] : values === null || values === void 0 ? void 0 : values[key]) || '';\n    });\n    return records;\n}\nexports.constructRecords = constructRecords;\nexports.domainExtensionToNamingServiceName = {\n    crypto: publicTypes_1.NamingServiceName.UNS,\n    zil: publicTypes_1.NamingServiceName.ZNS,\n};\nvar findNamingServiceName = function (domain) {\n    var extension = domain.split('.').pop();\n    if (!extension) {\n        return '';\n    }\n    else if (extension in exports.domainExtensionToNamingServiceName) {\n        return exports.domainExtensionToNamingServiceName[extension];\n    }\n    else {\n        return exports.domainExtensionToNamingServiceName.crypto;\n    }\n};\nexports.findNamingServiceName = findNamingServiceName;\nexports.EthereumNetworks = {\n    mainnet: 1,\n    ropsten: 3,\n    rinkeby: 4,\n    goerli: 5,\n    'polygon-mainnet': 137,\n    'polygon-mumbai': 80001,\n};\nexports.EthereumNetworksInverted = {\n    1: 'mainnet',\n    3: 'ropsten',\n    4: 'rinkeby',\n    5: 'goerli',\n    137: 'polygon-mainnet',\n    80001: 'polygon-mumbai',\n};\nvar wrapResult = function (func) {\n    var callResult;\n    // Catch immediately in case it's not an async call.\n    try {\n        callResult = func();\n    }\n    catch (error) {\n        return Promise.resolve({ result: null, error: error });\n    }\n    // `Promise.resolve` will convert both promise-like objects and plain values to promises.\n    var promise = callResult instanceof Promise ? callResult : Promise.resolve(callResult);\n    // We wrap results and errors to avoid unhandled promise rejections in case we won't `await` every promise\n    // and return earlier.\n    return promise.then(function (result) { return ({ result: result, error: null }); }, function (error) { return ({ result: null, error: error }); });\n};\nexports.wrapResult = wrapResult;\nvar unwrapResult = function (wrappedResult) {\n    if (wrappedResult.error !== null) {\n        throw wrappedResult.error;\n    }\n    return wrappedResult.result;\n};\nexports.unwrapResult = unwrapResult;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}