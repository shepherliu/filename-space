{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar dnsRecordsError_1 = __importStar(require(\"../errors/dnsRecordsError\"));\nvar publicTypes_1 = require(\"../types/publicTypes\");\nvar DnsUtils = /** @class */function () {\n  function DnsUtils() {}\n  DnsUtils.prototype.toList = function (record) {\n    var _a;\n    var _this = this;\n    var dnsTypes = this.getAllDnsTypes(record);\n    return (_a = []).concat.apply(_a, dnsTypes.map(function (type) {\n      return _this.constructDnsRecords(record, type);\n    }));\n  };\n  DnsUtils.prototype.toCrypto = function (records) {\n    var cryptoRecords = {};\n    for (var _i = 0, records_1 = records; _i < records_1.length; _i++) {\n      var record = records_1[_i];\n      var type = record.type,\n        TTL = record.TTL,\n        data = record.data;\n      var ttlInRecord = this.getJsonNumber(cryptoRecords[\"dns.\".concat(type, \".ttl\")]);\n      var dnsInRecord = this.getJsonArray(cryptoRecords, \"dns.\".concat(type));\n      if (dnsInRecord) {\n        dnsInRecord.push(data);\n        cryptoRecords[\"dns.\".concat(type)] = JSON.stringify(dnsInRecord);\n      } else {\n        cryptoRecords[\"dns.\".concat(type)] = JSON.stringify([data]);\n        cryptoRecords[\"dns.\".concat(type, \".ttl\")] = TTL.toString(10);\n      }\n      if (!!ttlInRecord && ttlInRecord !== TTL) {\n        throw new dnsRecordsError_1.default(dnsRecordsError_1.DnsRecordsErrorCode.InconsistentTtl, {\n          recordType: type\n        });\n      }\n    }\n    return cryptoRecords;\n  };\n  DnsUtils.prototype.protectFromCorruptRecord = function (rawRecord, type) {\n    try {\n      return rawRecord ? JSON.parse(rawRecord) : undefined;\n    } catch (err) {\n      if (err instanceof SyntaxError) {\n        throw new dnsRecordsError_1.default(dnsRecordsError_1.DnsRecordsErrorCode.DnsRecordCorrupted, {\n          recordType: type\n        });\n      }\n      throw err;\n    }\n  };\n  DnsUtils.prototype.getJsonArray = function (cryptoRecrods, key) {\n    var rawRecord = cryptoRecrods[key];\n    var type = key.split('.')[1];\n    return this.protectFromCorruptRecord(rawRecord, type);\n  };\n  DnsUtils.prototype.getJsonNumber = function (rawRecord) {\n    return rawRecord ? parseInt(rawRecord, 10) : undefined;\n  };\n  DnsUtils.prototype.getAllDnsTypes = function (records) {\n    var keys = new Set();\n    Object.keys(records).forEach(function (key) {\n      var chunks = key.split('.');\n      var type = chunks[1] && chunks[1] !== 'ttl';\n      if (type) {\n        keys.add(publicTypes_1.DnsRecordType[chunks[1]]);\n      }\n    });\n    return Array.from(keys);\n  };\n  DnsUtils.prototype.constructDnsRecords = function (cryptoData, type) {\n    var TTL = this.parseTtl(cryptoData, type);\n    var jsonValueString = cryptoData[\"dns.\".concat(type)];\n    if (!jsonValueString) {\n      return [];\n    }\n    var typeData = this.protectFromCorruptRecord(jsonValueString, type);\n    if (!this.isStringArray(typeData)) {\n      return [];\n    }\n    return typeData.map(function (data) {\n      return {\n        TTL: TTL,\n        data: data,\n        type: type\n      };\n    });\n  };\n  DnsUtils.prototype.parseTtl = function (data, type) {\n    var defaultTtl = data['dns.ttl'];\n    var recordTtl = data[\"dns.\".concat(type, \".ttl\")];\n    if (recordTtl) {\n      var parsedInt = this.parseIfNumber(recordTtl);\n      if (parsedInt) {\n        return parsedInt;\n      }\n    }\n    if (defaultTtl) {\n      var parsedInt = this.parseIfNumber(defaultTtl);\n      if (parsedInt) {\n        return parsedInt;\n      }\n    }\n    return DnsUtils.DefaultTtl;\n  };\n  DnsUtils.prototype.parseIfNumber = function (str) {\n    var parsedInt = parseInt(str, 10);\n    if (!isNaN(parsedInt)) {\n      return parsedInt;\n    }\n  };\n  DnsUtils.prototype.isStringArray = function (value) {\n    if (value instanceof Array) {\n      return value.every(function (item) {\n        return typeof item === 'string';\n      });\n    }\n    return false;\n  };\n  DnsUtils.DefaultTtl = 300; // 5 minutes\n  return DnsUtils;\n}();\nexports.default = DnsUtils;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","dnsRecordsError_1","require","publicTypes_1","DnsUtils","toList","record","_a","_this","dnsTypes","getAllDnsTypes","concat","apply","map","type","constructDnsRecords","toCrypto","records","cryptoRecords","_i","records_1","length","TTL","data","ttlInRecord","getJsonNumber","dnsInRecord","getJsonArray","push","JSON","stringify","toString","default","DnsRecordsErrorCode","InconsistentTtl","recordType","protectFromCorruptRecord","rawRecord","parse","err","SyntaxError","DnsRecordCorrupted","cryptoRecrods","key","split","parseInt","keys","Set","forEach","chunks","add","DnsRecordType","Array","from","cryptoData","parseTtl","jsonValueString","typeData","isStringArray","defaultTtl","recordTtl","parsedInt","parseIfNumber","DefaultTtl","str","isNaN","every","item"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/@unstoppabledomains/resolution/build/utils/DnsUtils.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dnsRecordsError_1 = __importStar(require(\"../errors/dnsRecordsError\"));\nvar publicTypes_1 = require(\"../types/publicTypes\");\nvar DnsUtils = /** @class */ (function () {\n    function DnsUtils() {\n    }\n    DnsUtils.prototype.toList = function (record) {\n        var _a;\n        var _this = this;\n        var dnsTypes = this.getAllDnsTypes(record);\n        return (_a = []).concat.apply(_a, dnsTypes.map(function (type) { return _this.constructDnsRecords(record, type); }));\n    };\n    DnsUtils.prototype.toCrypto = function (records) {\n        var cryptoRecords = {};\n        for (var _i = 0, records_1 = records; _i < records_1.length; _i++) {\n            var record = records_1[_i];\n            var type = record.type, TTL = record.TTL, data = record.data;\n            var ttlInRecord = this.getJsonNumber(cryptoRecords[\"dns.\".concat(type, \".ttl\")]);\n            var dnsInRecord = this.getJsonArray(cryptoRecords, \"dns.\".concat(type));\n            if (dnsInRecord) {\n                dnsInRecord.push(data);\n                cryptoRecords[\"dns.\".concat(type)] = JSON.stringify(dnsInRecord);\n            }\n            else {\n                cryptoRecords[\"dns.\".concat(type)] = JSON.stringify([data]);\n                cryptoRecords[\"dns.\".concat(type, \".ttl\")] = TTL.toString(10);\n            }\n            if (!!ttlInRecord && ttlInRecord !== TTL) {\n                throw new dnsRecordsError_1.default(dnsRecordsError_1.DnsRecordsErrorCode.InconsistentTtl, {\n                    recordType: type,\n                });\n            }\n        }\n        return cryptoRecords;\n    };\n    DnsUtils.prototype.protectFromCorruptRecord = function (rawRecord, type) {\n        try {\n            return rawRecord ? JSON.parse(rawRecord) : undefined;\n        }\n        catch (err) {\n            if (err instanceof SyntaxError) {\n                throw new dnsRecordsError_1.default(dnsRecordsError_1.DnsRecordsErrorCode.DnsRecordCorrupted, {\n                    recordType: type,\n                });\n            }\n            throw err;\n        }\n    };\n    DnsUtils.prototype.getJsonArray = function (cryptoRecrods, key) {\n        var rawRecord = cryptoRecrods[key];\n        var type = key.split('.')[1];\n        return this.protectFromCorruptRecord(rawRecord, type);\n    };\n    DnsUtils.prototype.getJsonNumber = function (rawRecord) {\n        return rawRecord ? parseInt(rawRecord, 10) : undefined;\n    };\n    DnsUtils.prototype.getAllDnsTypes = function (records) {\n        var keys = new Set();\n        Object.keys(records).forEach(function (key) {\n            var chunks = key.split('.');\n            var type = chunks[1] && chunks[1] !== 'ttl';\n            if (type) {\n                keys.add(publicTypes_1.DnsRecordType[chunks[1]]);\n            }\n        });\n        return Array.from(keys);\n    };\n    DnsUtils.prototype.constructDnsRecords = function (cryptoData, type) {\n        var TTL = this.parseTtl(cryptoData, type);\n        var jsonValueString = cryptoData[\"dns.\".concat(type)];\n        if (!jsonValueString) {\n            return [];\n        }\n        var typeData = this.protectFromCorruptRecord(jsonValueString, type);\n        if (!this.isStringArray(typeData)) {\n            return [];\n        }\n        return typeData.map(function (data) { return ({ TTL: TTL, data: data, type: type }); });\n    };\n    DnsUtils.prototype.parseTtl = function (data, type) {\n        var defaultTtl = data['dns.ttl'];\n        var recordTtl = data[\"dns.\".concat(type, \".ttl\")];\n        if (recordTtl) {\n            var parsedInt = this.parseIfNumber(recordTtl);\n            if (parsedInt) {\n                return parsedInt;\n            }\n        }\n        if (defaultTtl) {\n            var parsedInt = this.parseIfNumber(defaultTtl);\n            if (parsedInt) {\n                return parsedInt;\n            }\n        }\n        return DnsUtils.DefaultTtl;\n    };\n    DnsUtils.prototype.parseIfNumber = function (str) {\n        var parsedInt = parseInt(str, 10);\n        if (!isNaN(parsedInt)) {\n            return parsedInt;\n        }\n    };\n    DnsUtils.prototype.isStringArray = function (value) {\n        if (value instanceof Array) {\n            return value.every(function (item) { return typeof item === 'string'; });\n        }\n        return false;\n    };\n    DnsUtils.DefaultTtl = 300; // 5 minutes\n    return DnsUtils;\n}());\nexports.default = DnsUtils;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}