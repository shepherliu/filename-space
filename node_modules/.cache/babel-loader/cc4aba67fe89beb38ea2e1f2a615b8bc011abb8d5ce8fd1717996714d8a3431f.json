{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport * as dagPb from '@ipld/dag-pb';\nimport { sha256 } from 'multiformats/hashes/sha2';\nconst persist = async (buffer, blockstore, options) => {\n  if (!options.codec) {\n    options.codec = dagPb;\n  }\n  if (!options.hasher) {\n    options.hasher = sha256;\n  }\n  if (options.cidVersion === undefined) {\n    options.cidVersion = 1;\n  }\n  if (options.codec === dagPb && options.hasher !== sha256) {\n    options.cidVersion = 1;\n  }\n  const multihash = await options.hasher.digest(buffer);\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash);\n  if (!options.onlyHash) {\n    await blockstore.put(cid, buffer, {\n      signal: options.signal\n    });\n  }\n  return cid;\n};\nexport default persist;","map":{"version":3,"names":["CID","dagPb","sha256","persist","buffer","blockstore","options","codec","hasher","cidVersion","undefined","multihash","digest","cid","create","code","onlyHash","put","signal"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/ipfs-unixfs-importer/esm/src/utils/persist.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport * as dagPb from '@ipld/dag-pb';\nimport { sha256 } from 'multiformats/hashes/sha2';\nconst persist = async (buffer, blockstore, options) => {\n  if (!options.codec) {\n    options.codec = dagPb;\n  }\n  if (!options.hasher) {\n    options.hasher = sha256;\n  }\n  if (options.cidVersion === undefined) {\n    options.cidVersion = 1;\n  }\n  if (options.codec === dagPb && options.hasher !== sha256) {\n    options.cidVersion = 1;\n  }\n  const multihash = await options.hasher.digest(buffer);\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash);\n  if (!options.onlyHash) {\n    await blockstore.put(cid, buffer, { signal: options.signal });\n  }\n  return cid;\n};\nexport default persist;"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,SAASC,MAAM,QAAQ,0BAA0B;AACjD,MAAMC,OAAO,GAAG,OAAOC,MAAM,EAAEC,UAAU,EAAEC,OAAO,KAAK;EACrD,IAAI,CAACA,OAAO,CAACC,KAAK,EAAE;IAClBD,OAAO,CAACC,KAAK,GAAGN,KAAK;EACvB;EACA,IAAI,CAACK,OAAO,CAACE,MAAM,EAAE;IACnBF,OAAO,CAACE,MAAM,GAAGN,MAAM;EACzB;EACA,IAAII,OAAO,CAACG,UAAU,KAAKC,SAAS,EAAE;IACpCJ,OAAO,CAACG,UAAU,GAAG,CAAC;EACxB;EACA,IAAIH,OAAO,CAACC,KAAK,KAAKN,KAAK,IAAIK,OAAO,CAACE,MAAM,KAAKN,MAAM,EAAE;IACxDI,OAAO,CAACG,UAAU,GAAG,CAAC;EACxB;EACA,MAAME,SAAS,GAAG,MAAML,OAAO,CAACE,MAAM,CAACI,MAAM,CAACR,MAAM,CAAC;EACrD,MAAMS,GAAG,GAAGb,GAAG,CAACc,MAAM,CAACR,OAAO,CAACG,UAAU,EAAEH,OAAO,CAACC,KAAK,CAACQ,IAAI,EAAEJ,SAAS,CAAC;EACzE,IAAI,CAACL,OAAO,CAACU,QAAQ,EAAE;IACrB,MAAMX,UAAU,CAACY,GAAG,CAACJ,GAAG,EAAET,MAAM,EAAE;MAAEc,MAAM,EAAEZ,OAAO,CAACY;IAAO,CAAC,CAAC;EAC/D;EACA,OAAOL,GAAG;AACZ,CAAC;AACD,eAAeV,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}