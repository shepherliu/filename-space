{"ast":null,"code":"import \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nconst textEncoder = new TextEncoder();\nconst maxInt32 = 2 ** 32;\nconst maxUInt32 = 2 ** 31;\nfunction encodeLink(link, bytes) {\n  let i = bytes.length;\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative');\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding');\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1;\n    bytes[i] = 24;\n  }\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name);\n    i -= nameBytes.length;\n    bytes.set(nameBytes, i);\n    i = encodeVarint(bytes, i, nameBytes.length) - 1;\n    bytes[i] = 18;\n  }\n  if (link.Hash) {\n    i -= link.Hash.length;\n    bytes.set(link.Hash, i);\n    i = encodeVarint(bytes, i, link.Hash.length) - 1;\n    bytes[i] = 10;\n  }\n  return bytes.length - i;\n}\nexport function encodeNode(node) {\n  const size = sizeNode(node);\n  const bytes = new Uint8Array(size);\n  let i = size;\n  if (node.Data) {\n    i -= node.Data.length;\n    bytes.set(node.Data, i);\n    i = encodeVarint(bytes, i, node.Data.length) - 1;\n    bytes[i] = 10;\n  }\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i));\n      i -= size;\n      i = encodeVarint(bytes, i, size) - 1;\n      bytes[i] = 18;\n    }\n  }\n  return bytes;\n}\nfunction sizeLink(link) {\n  let n = 0;\n  if (link.Hash) {\n    const l = link.Hash.length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize);\n  }\n  return n;\n}\nfunction sizeNode(node) {\n  let n = 0;\n  if (node.Data) {\n    const l = node.Data.length;\n    n += 1 + l + sov(l);\n  }\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link);\n      n += 1 + l + sov(l);\n    }\n  }\n  return n;\n}\nfunction encodeVarint(bytes, offset, v) {\n  offset -= sov(v);\n  const base = offset;\n  while (v >= maxUInt32) {\n    bytes[offset++] = v & 127 | 128;\n    v /= 128;\n  }\n  while (v >= 128) {\n    bytes[offset++] = v & 127 | 128;\n    v >>>= 7;\n  }\n  bytes[offset] = v;\n  return base;\n}\nfunction sov(x) {\n  if (x % 2 === 0) {\n    x++;\n  }\n  return Math.floor((len64(x) + 6) / 7);\n}\nfunction len64(x) {\n  let n = 0;\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32);\n    n = 32;\n  }\n  if (x >= 1 << 16) {\n    x >>>= 16;\n    n += 16;\n  }\n  if (x >= 1 << 8) {\n    x >>>= 8;\n    n += 8;\n  }\n  return n + len8tab[x];\n}\nconst len8tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8];","map":{"version":3,"names":["textEncoder","TextEncoder","maxInt32","maxUInt32","encodeLink","link","bytes","i","length","Tsize","Error","Number","isSafeInteger","encodeVarint","Name","nameBytes","encode","set","Hash","encodeNode","node","size","sizeNode","Uint8Array","Data","Links","index","subarray","sizeLink","n","l","sov","offset","v","base","x","Math","floor","len64","len8tab"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/@ipld/dag-pb/esm/src/pb-encode.js"],"sourcesContent":["const textEncoder = new TextEncoder();\nconst maxInt32 = 2 ** 32;\nconst maxUInt32 = 2 ** 31;\nfunction encodeLink(link, bytes) {\n  let i = bytes.length;\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative');\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding');\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1;\n    bytes[i] = 24;\n  }\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name);\n    i -= nameBytes.length;\n    bytes.set(nameBytes, i);\n    i = encodeVarint(bytes, i, nameBytes.length) - 1;\n    bytes[i] = 18;\n  }\n  if (link.Hash) {\n    i -= link.Hash.length;\n    bytes.set(link.Hash, i);\n    i = encodeVarint(bytes, i, link.Hash.length) - 1;\n    bytes[i] = 10;\n  }\n  return bytes.length - i;\n}\nexport function encodeNode(node) {\n  const size = sizeNode(node);\n  const bytes = new Uint8Array(size);\n  let i = size;\n  if (node.Data) {\n    i -= node.Data.length;\n    bytes.set(node.Data, i);\n    i = encodeVarint(bytes, i, node.Data.length) - 1;\n    bytes[i] = 10;\n  }\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i));\n      i -= size;\n      i = encodeVarint(bytes, i, size) - 1;\n      bytes[i] = 18;\n    }\n  }\n  return bytes;\n}\nfunction sizeLink(link) {\n  let n = 0;\n  if (link.Hash) {\n    const l = link.Hash.length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize);\n  }\n  return n;\n}\nfunction sizeNode(node) {\n  let n = 0;\n  if (node.Data) {\n    const l = node.Data.length;\n    n += 1 + l + sov(l);\n  }\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link);\n      n += 1 + l + sov(l);\n    }\n  }\n  return n;\n}\nfunction encodeVarint(bytes, offset, v) {\n  offset -= sov(v);\n  const base = offset;\n  while (v >= maxUInt32) {\n    bytes[offset++] = v & 127 | 128;\n    v /= 128;\n  }\n  while (v >= 128) {\n    bytes[offset++] = v & 127 | 128;\n    v >>>= 7;\n  }\n  bytes[offset] = v;\n  return base;\n}\nfunction sov(x) {\n  if (x % 2 === 0) {\n    x++;\n  }\n  return Math.floor((len64(x) + 6) / 7);\n}\nfunction len64(x) {\n  let n = 0;\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32);\n    n = 32;\n  }\n  if (x >= 1 << 16) {\n    x >>>= 16;\n    n += 16;\n  }\n  if (x >= 1 << 8) {\n    x >>>= 8;\n    n += 8;\n  }\n  return n + len8tab[x];\n}\nconst len8tab = [\n  0,\n  1,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8\n];"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}