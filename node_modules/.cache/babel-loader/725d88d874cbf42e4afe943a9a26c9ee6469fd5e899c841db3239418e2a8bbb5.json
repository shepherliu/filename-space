{"ast":null,"code":"import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = value => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n  if (typeof audPayload === 'string') {\n    return audOption.includes(audPayload);\n  }\n  if (Array.isArray(audPayload)) {\n    return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n  }\n  return false;\n};\nexport default ((protectedHeader, encodedPayload, options = {}) => {\n  const {\n    typ\n  } = options;\n  if (typ && (typeof protectedHeader.typ !== 'string' || normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n    throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n  }\n  let payload;\n  try {\n    payload = JSON.parse(decoder.decode(encodedPayload));\n  } catch (_a) {}\n  if (!isObject(payload)) {\n    throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n  }\n  const {\n    issuer\n  } = options;\n  if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n    throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n  }\n  const {\n    subject\n  } = options;\n  if (subject && payload.sub !== subject) {\n    throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n  }\n  const {\n    audience\n  } = options;\n  if (audience && !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n    throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n  }\n  let tolerance;\n  switch (typeof options.clockTolerance) {\n    case 'string':\n      tolerance = secs(options.clockTolerance);\n      break;\n    case 'number':\n      tolerance = options.clockTolerance;\n      break;\n    case 'undefined':\n      tolerance = 0;\n      break;\n    default:\n      throw new TypeError('Invalid clockTolerance option type');\n  }\n  const {\n    currentDate\n  } = options;\n  const now = epoch(currentDate || new Date());\n  if ((payload.iat !== undefined || options.maxTokenAge) && typeof payload.iat !== 'number') {\n    throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n  }\n  if (payload.nbf !== undefined) {\n    if (typeof payload.nbf !== 'number') {\n      throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n    }\n    if (payload.nbf > now + tolerance) {\n      throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n    }\n  }\n  if (payload.exp !== undefined) {\n    if (typeof payload.exp !== 'number') {\n      throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n    }\n    if (payload.exp <= now - tolerance) {\n      throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n    }\n  }\n  if (options.maxTokenAge) {\n    const age = now - payload.iat;\n    const max = typeof options.maxTokenAge === 'number' ? options.maxTokenAge : secs(options.maxTokenAge);\n    if (age - tolerance > max) {\n      throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n    }\n    if (age < 0 - tolerance) {\n      throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n    }\n  }\n  return payload;\n});","map":{"version":3,"names":["JWTClaimValidationFailed","JWTExpired","JWTInvalid","decoder","epoch","secs","isObject","normalizeTyp","value","toLowerCase","replace","checkAudiencePresence","audPayload","audOption","includes","Array","isArray","some","Set","prototype","has","bind","protectedHeader","encodedPayload","options","typ","payload","JSON","parse","decode","_a","issuer","iss","subject","sub","audience","aud","tolerance","clockTolerance","TypeError","currentDate","now","Date","iat","undefined","maxTokenAge","nbf","exp","age","max"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/jose/dist/browser/lib/jwt_claims_set.js"],"sourcesContent":["import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch (_a) {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { issuer } = options;\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    const { subject } = options;\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    const { audience } = options;\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || options.maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (options.maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof options.maxTokenAge === 'number' ? options.maxTokenAge : secs(options.maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}