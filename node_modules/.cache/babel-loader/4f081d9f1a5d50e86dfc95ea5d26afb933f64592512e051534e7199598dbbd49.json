{"ast":null,"code":"function message(msg, actual, ...types) {\n  if (types.length > 2) {\n    const last = types.pop();\n    msg += `one of type ${types.join(', ')}, or ${last}.`;\n  } else if (types.length === 2) {\n    msg += `one of type ${types[0]} or ${types[1]}.`;\n  } else {\n    msg += `of type ${types[0]}.`;\n  }\n  if (actual == null) {\n    msg += ` Received ${actual}`;\n  } else if (typeof actual === 'function' && actual.name) {\n    msg += ` Received function ${actual.name}`;\n  } else if (typeof actual === 'object' && actual != null) {\n    if (actual.constructor && actual.constructor.name) {\n      msg += ` Received an instance of ${actual.constructor.name}`;\n    }\n  }\n  return msg;\n}\nexport default ((actual, ...types) => {\n  return message('Key must be ', actual, ...types);\n});\nexport function withAlg(alg, actual, ...types) {\n  return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}","map":{"version":3,"names":["message","msg","actual","types","length","last","pop","join","name","constructor","withAlg","alg"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/jose/dist/browser/lib/invalid_key_input.js"],"sourcesContent":["function message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n"],"mappings":"AAAA,SAASA,OAAO,CAACC,GAAG,EAAEC,MAAM,EAAE,GAAGC,KAAK,EAAE;EACpC,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;IAClB,MAAMC,IAAI,GAAGF,KAAK,CAACG,GAAG,EAAE;IACxBL,GAAG,IAAK,eAAcE,KAAK,CAACI,IAAI,CAAC,IAAI,CAAE,QAAOF,IAAK,GAAE;EACzD,CAAC,MACI,IAAIF,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IACzBH,GAAG,IAAK,eAAcE,KAAK,CAAC,CAAC,CAAE,OAAMA,KAAK,CAAC,CAAC,CAAE,GAAE;EACpD,CAAC,MACI;IACDF,GAAG,IAAK,WAAUE,KAAK,CAAC,CAAC,CAAE,GAAE;EACjC;EACA,IAAID,MAAM,IAAI,IAAI,EAAE;IAChBD,GAAG,IAAK,aAAYC,MAAO,EAAC;EAChC,CAAC,MACI,IAAI,OAAOA,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACM,IAAI,EAAE;IAClDP,GAAG,IAAK,sBAAqBC,MAAM,CAACM,IAAK,EAAC;EAC9C,CAAC,MACI,IAAI,OAAON,MAAM,KAAK,QAAQ,IAAIA,MAAM,IAAI,IAAI,EAAE;IACnD,IAAIA,MAAM,CAACO,WAAW,IAAIP,MAAM,CAACO,WAAW,CAACD,IAAI,EAAE;MAC/CP,GAAG,IAAK,4BAA2BC,MAAM,CAACO,WAAW,CAACD,IAAK,EAAC;IAChE;EACJ;EACA,OAAOP,GAAG;AACd;AACA,gBAAe,CAACC,MAAM,EAAE,GAAGC,KAAK,KAAK;EACjC,OAAOH,OAAO,CAAC,cAAc,EAAEE,MAAM,EAAE,GAAGC,KAAK,CAAC;AACpD,CAAC;AACD,OAAO,SAASO,OAAO,CAACC,GAAG,EAAET,MAAM,EAAE,GAAGC,KAAK,EAAE;EAC3C,OAAOH,OAAO,CAAE,eAAcW,GAAI,qBAAoB,EAAET,MAAM,EAAE,GAAGC,KAAK,CAAC;AAC7E"},"metadata":{},"sourceType":"module","externalDependencies":[]}