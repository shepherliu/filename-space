{"ast":null,"code":"import { UnixFS } from 'ipfs-unixfs';\nimport persist from '../utils/persist.js';\nimport { encode, prepare } from '@ipld/dag-pb';\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  });\n  const buffer = encode(prepare({\n    Data: unixfs.marshal()\n  }));\n  const cid = await persist(buffer, blockstore, options);\n  const path = item.path;\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  };\n};\nexport default dirBuilder;","map":{"version":3,"names":["UnixFS","persist","encode","prepare","dirBuilder","item","blockstore","options","unixfs","type","mtime","mode","buffer","Data","marshal","cid","path","size","length"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/ipfs-unixfs-importer/esm/src/dag-builder/dir.js"],"sourcesContent":["import { UnixFS } from 'ipfs-unixfs';\nimport persist from '../utils/persist.js';\nimport {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  });\n  const buffer = encode(prepare({ Data: unixfs.marshal() }));\n  const cid = await persist(buffer, blockstore, options);\n  const path = item.path;\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  };\n};\nexport default dirBuilder;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAa;AACpC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SACEC,MAAM,EACNC,OAAO,QACF,cAAc;AACrB,MAAMC,UAAU,GAAG,OAAOC,IAAI,EAAEC,UAAU,EAAEC,OAAO,KAAK;EACtD,MAAMC,MAAM,GAAG,IAAIR,MAAM,CAAC;IACxBS,IAAI,EAAE,WAAW;IACjBC,KAAK,EAAEL,IAAI,CAACK,KAAK;IACjBC,IAAI,EAAEN,IAAI,CAACM;EACb,CAAC,CAAC;EACF,MAAMC,MAAM,GAAGV,MAAM,CAACC,OAAO,CAAC;IAAEU,IAAI,EAAEL,MAAM,CAACM,OAAO;EAAG,CAAC,CAAC,CAAC;EAC1D,MAAMC,GAAG,GAAG,MAAMd,OAAO,CAACW,MAAM,EAAEN,UAAU,EAAEC,OAAO,CAAC;EACtD,MAAMS,IAAI,GAAGX,IAAI,CAACW,IAAI;EACtB,OAAO;IACLD,GAAG;IACHC,IAAI;IACJR,MAAM;IACNS,IAAI,EAAEL,MAAM,CAACM;EACf,CAAC;AACH,CAAC;AACD,eAAed,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}