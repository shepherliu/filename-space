{"ast":null,"code":"import mergeOptions from 'merge-options';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { murmur3128 } from '@multiformats/murmur3';\nasync function hamtHashFn(buf) {\n  return (await murmur3128.encode(buf)).slice(0, 8).reverse();\n}\nconst defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced',\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hasher: sha256,\n  leafType: 'file',\n  cidVersion: 0,\n  progress: () => () => {},\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  polynomial: 17437180132763652,\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  recursive: false,\n  hidden: false,\n  timeout: undefined,\n  hamtHashFn,\n  hamtHashCode: 34,\n  hamtBucketBits: 8\n};\nexport default ((options = {}) => {\n  const defaults = mergeOptions.bind({\n    ignoreUndefined: true\n  });\n  return defaults(defaultOptions, options);\n});","map":{"version":3,"names":["mergeOptions","sha256","murmur3128","hamtHashFn","buf","encode","slice","reverse","defaultOptions","chunker","strategy","rawLeaves","onlyHash","reduceSingleLeafToSelf","hasher","leafType","cidVersion","progress","shardSplitThreshold","fileImportConcurrency","blockWriteConcurrency","minChunkSize","maxChunkSize","avgChunkSize","window","polynomial","maxChildrenPerNode","layerRepeat","wrapWithDirectory","recursive","hidden","timeout","undefined","hamtHashCode","hamtBucketBits","options","defaults","bind","ignoreUndefined"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/ipfs-unixfs-importer/esm/src/options.js"],"sourcesContent":["import mergeOptions from 'merge-options';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { murmur3128 } from '@multiformats/murmur3';\nasync function hamtHashFn(buf) {\n  return (await murmur3128.encode(buf)).slice(0, 8).reverse();\n}\nconst defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced',\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hasher: sha256,\n  leafType: 'file',\n  cidVersion: 0,\n  progress: () => () => {\n  },\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  polynomial: 17437180132763652,\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  recursive: false,\n  hidden: false,\n  timeout: undefined,\n  hamtHashFn,\n  hamtHashCode: 34,\n  hamtBucketBits: 8\n};\nexport default (options = {}) => {\n  const defaults = mergeOptions.bind({ ignoreUndefined: true });\n  return defaults(defaultOptions, options);\n};"],"mappings":"AAAA,OAAOA,YAAY,MAAM,eAAe;AACxC,SAASC,MAAM,QAAQ,0BAA0B;AACjD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,eAAeC,UAAU,CAACC,GAAG,EAAE;EAC7B,OAAO,CAAC,MAAMF,UAAU,CAACG,MAAM,CAACD,GAAG,CAAC,EAAEE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,OAAO,EAAE;AAC7D;AACA,MAAMC,cAAc,GAAG;EACrBC,OAAO,EAAE,OAAO;EAChBC,QAAQ,EAAE,UAAU;EACpBC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE,KAAK;EACfC,sBAAsB,EAAE,IAAI;EAC5BC,MAAM,EAAEb,MAAM;EACdc,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE,CAAC;EACbC,QAAQ,EAAE,MAAM,MAAM,CACtB,CAAC;EACDC,mBAAmB,EAAE,IAAI;EACzBC,qBAAqB,EAAE,EAAE;EACzBC,qBAAqB,EAAE,EAAE;EACzBC,YAAY,EAAE,MAAM;EACpBC,YAAY,EAAE,MAAM;EACpBC,YAAY,EAAE,MAAM;EACpBC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE,iBAAiB;EAC7BC,kBAAkB,EAAE,GAAG;EACvBC,WAAW,EAAE,CAAC;EACdC,iBAAiB,EAAE,KAAK;EACxBC,SAAS,EAAE,KAAK;EAChBC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAEC,SAAS;EAClB7B,UAAU;EACV8B,YAAY,EAAE,EAAE;EAChBC,cAAc,EAAE;AAClB,CAAC;AACD,gBAAe,CAACC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC/B,MAAMC,QAAQ,GAAGpC,YAAY,CAACqC,IAAI,CAAC;IAAEC,eAAe,EAAE;EAAK,CAAC,CAAC;EAC7D,OAAOF,QAAQ,CAAC5B,cAAc,EAAE2B,OAAO,CAAC;AAC1C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}