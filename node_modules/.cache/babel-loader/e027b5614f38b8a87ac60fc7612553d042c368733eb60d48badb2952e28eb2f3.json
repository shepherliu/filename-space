{"ast":null,"code":"import \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport * as Digest from './digest.js';\nexport const from = ({\n  name,\n  code,\n  encode\n}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","map":{"version":3,"names":["Digest","from","name","code","encode","Hasher","constructor","digest","input","Uint8Array","result","create","then","Error"],"sources":["/Users/shepher/Downloads/filename-space/node_modules/multiformats/esm/src/hashes/hasher.js"],"sourcesContent":["import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}"],"mappings":";;AAAA,OAAO,KAAKA,MAAM,MAAM,aAAa;AACrC,OAAO,MAAMC,IAAI,GAAG,CAAC;EAACC,IAAI;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK,IAAIC,MAAM,CAACH,IAAI,EAAEC,IAAI,EAAEC,MAAM,CAAC;AAC5E,OAAO,MAAMC,MAAM,CAAC;EAClBC,WAAW,CAACJ,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAE;IAC9B,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;EACAG,MAAM,CAACC,KAAK,EAAE;IACZ,IAAIA,KAAK,YAAYC,UAAU,EAAE;MAC/B,MAAMC,MAAM,GAAG,IAAI,CAACN,MAAM,CAACI,KAAK,CAAC;MACjC,OAAOE,MAAM,YAAYD,UAAU,GAAGT,MAAM,CAACW,MAAM,CAAC,IAAI,CAACR,IAAI,EAAEO,MAAM,CAAC,GAAGA,MAAM,CAACE,IAAI,CAACL,MAAM,IAAIP,MAAM,CAACW,MAAM,CAAC,IAAI,CAACR,IAAI,EAAEI,MAAM,CAAC,CAAC;IAClI,CAAC,MAAM;MACL,MAAMM,KAAK,CAAC,mCAAmC,CAAC;IAClD;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}